<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Walicxe3D: source/prims.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.html"><span>Modules</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.html"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.html"><span>File&nbsp;Members</span></a></li>
    </ul>
  </div>
<h1>source/prims.f90</h1><a href="prims_8f90.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">!===============================================================================</span><span class="comment"></span>
<a name="l00002"></a>00002 !&gt; @file prims.f90
<a name="l00003"></a>00003 !&gt; @brief Calculation of primitives and conversion from/to flow variables
<a name="l00004"></a>00004 !&gt; @author Juan C. Toledo
<a name="l00005"></a>00005 !&gt; @date 30/Nov/2011
<a name="l00006"></a>00006 
<a name="l00007"></a>00007 <span class="comment">! Copyright (c) 2012 Alejandro Esquivel and Juan C. Toledo</span>
<a name="l00008"></a>00008 <span class="comment">!</span>
<a name="l00009"></a>00009 <span class="comment">! This file is part of Walicxe3D.</span>
<a name="l00010"></a>00010 <span class="comment">!</span>
<a name="l00011"></a>00011 <span class="comment">! Walicxe3D is free software; you can redistribute it and/or modify</span>
<a name="l00012"></a>00012 <span class="comment">! it under the terms of the GNU General Public License as published by</span>
<a name="l00013"></a>00013 <span class="comment">! the Free Software Foundation; either version 3 of the License, or</span>
<a name="l00014"></a>00014 <span class="comment">! (at your option) any later version.</span>
<a name="l00015"></a>00015 <span class="comment">!</span>
<a name="l00016"></a>00016 <span class="comment">! This program is distributed in the hope that it will be useful,</span>
<a name="l00017"></a>00017 <span class="comment">! but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00018"></a>00018 <span class="comment">! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>
<a name="l00019"></a>00019 <span class="comment">! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>
<a name="l00020"></a>00020 <span class="comment">! GNU General Public License for more details.</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="comment">! You should have received a copy of the GNU General Public License</span>
<a name="l00023"></a>00023 <span class="comment">! along with this program.  If not, see http://www.gnu.org/licenses/.</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="comment">!===============================================================================</span>
<a name="l00026"></a>00026 <span class="comment"></span>
<a name="l00027"></a>00027 !&gt; @brief Update primitives in all cells (physical+ghost) over all blocks
<a name="l00028"></a><a class="code" href="prims_8f90.html#a3bcf566b4de47ff3e1e7b6aeffba67a1">00028</a> <span class="keyword">subroutine </span><a class="code" href="prims_8f90.html#a3bcf566b4de47ff3e1e7b6aeffba67a1">updatePrims</a> (uvars, pvars)
<a name="l00029"></a>00029 
<a name="l00030"></a>00030   use <span class="keywordflow">parameters</span>
<a name="l00031"></a>00031   use <span class="keywordflow">globals</span>
<a name="l00032"></a>00032   <span class="keyword">implicit none</span>
<a name="l00033"></a>00033 
<a name="l00034"></a>00034   <span class="keywordtype">real</span>, <span class="keywordtype">intent(in)</span> :: uvars(nbMaxProc, neqtot, nxmin:nxmax, nymin:nymax, nzmin:nzmax)
<a name="l00035"></a>00035   <span class="keywordtype">real</span>, <span class="keywordtype">intent(out)</span> :: pvars(nbMaxProc, neqtot, nxmin:nxmax, nymin:nymax, nzmin:nzmax)  
<a name="l00036"></a>00036 
<a name="l00037"></a>00037   <span class="keywordtype">integer</span> :: nb, bID, i, j, k
<a name="l00038"></a>00038 
<a name="l00039"></a>00039   <span class="keyword">do</span> nb=1,nbMaxProc
<a name="l00040"></a>00040     bID = <a class="code" href="namespaceglobals.html#adc845521f6ad2502bc19df43607224e0">localBlocks</a>(nb)
<a name="l00041"></a>00041     <span class="keyword">if</span> (bID.ne.-1) <span class="keyword">then</span>
<a name="l00042"></a>00042       <span class="keyword">do</span> i=nxmin,nxmax
<a name="l00043"></a>00043         <span class="keyword">do</span> j=nymin,nymax
<a name="l00044"></a>00044           <span class="keyword">do</span> k=nzmin,nzmax
<a name="l00045"></a>00045             call <a class="code" href="prims_8f90.html#a38f2a9b399e6ca415b32e06acd54577b">flow2prim </a>(uvars(nb,:,i,j,k), pvars(nb,:,i,j,k))
<a name="l00046"></a>00046           <span class="keyword">end do</span>
<a name="l00047"></a>00047         <span class="keyword">end do</span>
<a name="l00048"></a>00048       <span class="keyword">end do</span>     
<a name="l00049"></a>00049     <span class="keyword">end if</span>    
<a name="l00050"></a>00050   <span class="keyword">end do</span>
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 
<a name="l00053"></a>00053 <span class="keyword">end subroutine updatePrims</span>
<a name="l00054"></a>00054 
<a name="l00055"></a>00055 <span class="comment">!===============================================================================</span>
<a name="l00056"></a>00056 <span class="comment"></span>
<a name="l00057"></a>00057 !&gt; @brief Estimates temperature from primitives, in CGS
<a name="l00058"></a>00058 !&gt; @details Will use the mean atomic mass for ionized gas if the estimated
<a name="l00059"></a>00059 !! temperature (using the neutral mean atomic mass) exceeds ion_thres
<a name="l00060"></a>00060 !&gt; @param pvars Vector of primitives
<a name="l00061"></a><a class="code" href="prims_8f90.html#a5f96c7fc4ae0db597131c0862462bdf0">00061</a> <span class="keyword">subroutine </span><a class="code" href="prims_8f90.html#a5f96c7fc4ae0db597131c0862462bdf0">calcTemp</a> (pvars, temp)
<a name="l00062"></a>00062 
<a name="l00063"></a>00063   use <span class="keywordflow">parameters</span>
<a name="l00064"></a>00064   use <span class="keywordflow">globals</span>
<a name="l00065"></a>00065   <span class="keyword">implicit none</span>
<a name="l00066"></a>00066 
<a name="l00067"></a>00067   <span class="keywordtype">real</span>, <span class="keywordtype">intent(in)</span> :: pvars(neqtot)
<a name="l00068"></a>00068   <span class="keywordtype">real</span>, <span class="keywordtype">intent(out)</span> :: temp
<a name="l00069"></a>00069 
<a name="l00070"></a>00070   temp = <a class="code" href="namespaceparameters.html#a0d35bdb0c5f3e19fd70947bc005c4a74">mu0</a>*pvars(5)/(pvars(1)*KB)*p_sc/<a class="code" href="namespaceparameters.html#a77a1d6b631f1e11d8255aaf514eca4bd">d_sc</a>
<a name="l00071"></a>00071 
<a name="l00072"></a>00072   <span class="keyword">if</span> (temp.gt.<a class="code" href="namespaceparameters.html#ae3f4f07453a0134ec697ed451e2c2312">ion_thres</a>) <span class="keyword">then</span>
<a name="l00073"></a>00073     temp = <a class="code" href="namespaceparameters.html#a3f22456e178fc757867044f2bb0e1306">mui</a>*pvars(5)/(pvars(1)*KB)*p_sc/<a class="code" href="namespaceparameters.html#a77a1d6b631f1e11d8255aaf514eca4bd">d_sc</a>
<a name="l00074"></a>00074   <span class="keyword">end if</span>
<a name="l00075"></a>00075 
<a name="l00076"></a>00076   return
<a name="l00077"></a>00077 
<a name="l00078"></a>00078 <span class="keyword">end subroutine calcTemp</span>
<a name="l00079"></a>00079 
<a name="l00080"></a>00080 <span class="comment">!===============================================================================</span>
<a name="l00081"></a>00081 <span class="comment"></span>
<a name="l00082"></a>00082 !&gt; @brief Calculates the vector of conserved (flow) vars given the vector of
<a name="l00083"></a>00083 !! primitive variables. Passive scalars are simply copied over.
<a name="l00084"></a>00084 !&gt; @param pvars(neqtot) An input vector containing (rho,u,v,w,P,s1,s2,...)
<a name="l00085"></a>00085 !&gt; @param uvars(neqtot) An output vector containing (rho,rho*u,rho*v,rho*w,E,s1,s2,...)
<a name="l00086"></a><a class="code" href="prims_8f90.html#a8e75a6e601ab9110928efb7e59ab4453">00086</a> <span class="keyword">subroutine </span><a class="code" href="prims_8f90.html#a8e75a6e601ab9110928efb7e59ab4453">prim2flow</a> (pvars, uvars)
<a name="l00087"></a>00087 
<a name="l00088"></a>00088   use <span class="keywordflow">parameters</span>
<a name="l00089"></a>00089   <span class="keyword">implicit none</span>
<a name="l00090"></a>00090 
<a name="l00091"></a>00091   <span class="keywordtype">real</span>, <span class="keywordtype">intent(in)</span> :: pvars(neqtot)
<a name="l00092"></a>00092   <span class="keywordtype">real</span>, <span class="keywordtype">intent(out)</span> :: uvars(neqtot)
<a name="l00093"></a>00093 
<a name="l00094"></a>00094   <span class="keywordtype">real</span> :: v2
<a name="l00095"></a>00095 
<a name="l00096"></a>00096   uvars(1) = pvars(1)
<a name="l00097"></a>00097   uvars(2) = pvars(1)*pvars(2)
<a name="l00098"></a>00098   uvars(3) = pvars(1)*pvars(3)
<a name="l00099"></a>00099   uvars(4) = pvars(1)*pvars(4)
<a name="l00100"></a>00100 
<a name="l00101"></a>00101   v2 = pvars(2)**2 + pvars(3)**2 + pvars(4)**2
<a name="l00102"></a>00102   uvars(5) = 0.5*pvars(1)*v2 + CV*pvars(5)
<a name="l00103"></a>00103 
<a name="l00104"></a>00104   <span class="keyword">if</span> (<a class="code" href="namespaceparameters.html#ad0a00ea4db66b0ca30a5cda46b68b3d5">npassive</a>.ge.1) <span class="keyword">then</span>
<a name="l00105"></a>00105     uvars(6:neqtot) = pvars(6:neqtot)
<a name="l00106"></a>00106   <span class="keyword">end if</span>
<a name="l00107"></a>00107 
<a name="l00108"></a>00108   return
<a name="l00109"></a>00109 
<a name="l00110"></a>00110 <span class="keyword">end subroutine prim2flow</span>
<a name="l00111"></a>00111 
<a name="l00112"></a>00112 
<a name="l00113"></a>00113 <span class="comment">!===============================================================================</span>
<a name="l00114"></a>00114 <span class="comment"></span>
<a name="l00115"></a>00115 !&gt; @brief Calculates the vector of primitive variables given the vector of
<a name="l00116"></a>00116 !! conserved (flow) variables. Any pssive scalars are simply copied over.
<a name="l00117"></a>00117 !&gt; @param uvars(neqtot) An input vector containing (rho,rho*u,rho*v,rho*w,E,...)
<a name="l00118"></a>00118 !&gt; @param pvars(neqtot) An output vector containing (rho,u,v,w,P,...)
<a name="l00119"></a><a class="code" href="prims_8f90.html#a38f2a9b399e6ca415b32e06acd54577b">00119</a> <span class="keyword">subroutine </span><a class="code" href="prims_8f90.html#a38f2a9b399e6ca415b32e06acd54577b">flow2prim</a> (uvars, pvars)
<a name="l00120"></a>00120 
<a name="l00121"></a>00121   use <span class="keywordflow">parameters</span>
<a name="l00122"></a>00122   <span class="keyword">implicit none</span>
<a name="l00123"></a>00123 
<a name="l00124"></a>00124   <span class="keywordtype">real</span>, <span class="keywordtype">intent(in)</span> :: uvars(neqtot)
<a name="l00125"></a>00125   <span class="keywordtype">real</span>, <span class="keywordtype">intent(out)</span> :: pvars(neqtot)
<a name="l00126"></a>00126 
<a name="l00127"></a>00127   <span class="keywordtype">real</span> :: rhov2
<a name="l00128"></a>00128 
<a name="l00129"></a>00129   pvars(1) = uvars(1)
<a name="l00130"></a>00130   pvars(2) = uvars(2)/uvars(1)
<a name="l00131"></a>00131   pvars(3) = uvars(3)/uvars(1)
<a name="l00132"></a>00132   pvars(4) = uvars(4)/uvars(1)
<a name="l00133"></a>00133 
<a name="l00134"></a>00134   rhov2 = (uvars(2)**2 + uvars(3)**2 + uvars(4)**2)/uvars(1)
<a name="l00135"></a>00135   pvars(5) = (uvars(5)-0.5*rhov2)/CV
<a name="l00136"></a>00136 
<a name="l00137"></a>00137   <span class="comment">! Floor on pressure</span>
<a name="l00138"></a>00138   <span class="keyword">if</span> (pvars(5).lt.1.0e-30) <span class="keyword">then</span>
<a name="l00139"></a>00139     pvars(5) = 1.0e-30
<a name="l00140"></a>00140   <span class="keyword">end if</span>
<a name="l00141"></a>00141 
<a name="l00142"></a>00142   <span class="comment">! Floor on density</span>
<a name="l00143"></a>00143   <span class="keyword">if</span> (pvars(1).lt.1.0e-40) <span class="keyword">then</span>
<a name="l00144"></a>00144     pvars(1) = 1.0e-40
<a name="l00145"></a>00145   <span class="keyword">end if</span>
<a name="l00146"></a>00146   
<a name="l00147"></a>00147   <span class="keyword">if</span> (<a class="code" href="namespaceparameters.html#ad0a00ea4db66b0ca30a5cda46b68b3d5">npassive</a>.ge.1) <span class="keyword">then</span>
<a name="l00148"></a>00148     pvars(6:neqtot) = uvars(6:neqtot)
<a name="l00149"></a>00149   <span class="keyword">end if</span>
<a name="l00150"></a>00150 
<a name="l00151"></a>00151   return
<a name="l00152"></a>00152   
<a name="l00153"></a>00153 <span class="keyword">end subroutine flow2prim</span>
<a name="l00154"></a>00154 
<a name="l00155"></a>00155 <span class="comment">!===============================================================================</span>
<a name="l00156"></a>00156 <span class="comment"></span>
<a name="l00157"></a>00157 !&gt; @brief Calculates the vectors of physical fluxes along a specific dimension
<a name="l00158"></a>00158 !! given the vector of primitive variables. 
<a name="l00159"></a>00159 !&gt; @param pvars(neqtot) An input vector containing primitives
<a name="l00160"></a>00160 !&gt; @param dimf Dimension along which fluxes are to be calculated
<a name="l00161"></a>00161 !&gt; @param F(neqtot) An output vector containing fluxes along dimf
<a name="l00162"></a><a class="code" href="prims_8f90.html#abb5b0c98fe52086f4a769f16ffba7155">00162</a> <span class="keyword">subroutine </span><a class="code" href="prims_8f90.html#abb5b0c98fe52086f4a769f16ffba7155">prim2fluxes</a> (pvars, dimens, flux)
<a name="l00163"></a>00163 
<a name="l00164"></a>00164   use <span class="keywordflow">parameters</span>
<a name="l00165"></a>00165   <span class="keyword">implicit none</span>
<a name="l00166"></a>00166 
<a name="l00167"></a>00167   <span class="keywordtype">real</span>, <span class="keywordtype">intent(in)</span> :: pvars(neqtot)
<a name="l00168"></a>00168   <span class="keywordtype">integer</span>, <span class="keywordtype">intent(in)</span> :: dimens
<a name="l00169"></a>00169   <span class="keywordtype">real</span>, <span class="keywordtype">intent(out)</span> :: flux(neqtot)
<a name="l00170"></a>00170 
<a name="l00171"></a>00171   <span class="keywordtype">real</span> :: v2, etot
<a name="l00172"></a>00172   <span class="keywordtype">real</span> :: pvars1(neqtot)
<a name="l00173"></a>00173 
<a name="l00174"></a>00174   <span class="comment">! Make a copy of the primitives so the original ones are not split</span>
<a name="l00175"></a>00175   pvars1(:) = pvars(:)
<a name="l00176"></a>00176 
<a name="l00177"></a>00177   <span class="comment">! Swap velocity components when dimf=2 (Y) or dimf=3(Z)</span>
<a name="l00178"></a>00178   <span class="keyword">if</span> (dimens.eq.DIM_Y) <span class="keyword">then</span>
<a name="l00179"></a>00179     call <a class="code" href="prims_8f90.html#ab943f29f1385451fbef5c1809312bece">swapxy</a>(pvars1)
<a name="l00180"></a>00180   <span class="keyword">else</span> <span class="keyword">if</span> (dimens.eq.DIM_Z) <span class="keyword">then</span>
<a name="l00181"></a>00181     call <a class="code" href="prims_8f90.html#a81acf562c7962cb3c8b6729a3c65d8ba">swapxz</a>(pvars1)
<a name="l00182"></a>00182   <span class="keyword">end if</span>
<a name="l00183"></a>00183 
<a name="l00184"></a>00184   v2 = pvars1(2)**2 + pvars1(3)**2 + pvars1(4)**2
<a name="l00185"></a>00185   etot = 0.5*pvars1(1)*v2 + CV*pvars1(5)
<a name="l00186"></a>00186 
<a name="l00187"></a>00187   <span class="comment">! Calculate Fluxes (formulae for X)</span>
<a name="l00188"></a>00188   flux(1) = pvars1(1)*pvars1(2)
<a name="l00189"></a>00189   flux(2) = pvars1(5) + pvars1(1)*(pvars1(2)**2)
<a name="l00190"></a>00190   flux(3) = pvars1(1)*pvars1(2)*pvars1(3)
<a name="l00191"></a>00191   flux(4) = pvars1(1)*pvars1(2)*pvars1(4)
<a name="l00192"></a>00192   flux(5) = pvars1(2)*(etot+pvars1(5))
<a name="l00193"></a>00193 
<a name="l00194"></a>00194   <span class="keyword">if</span> (<a class="code" href="namespaceparameters.html#ad0a00ea4db66b0ca30a5cda46b68b3d5">npassive</a>.ge.1) <span class="keyword">then</span>
<a name="l00195"></a>00195     flux(6:neqtot) = pvars1(2)*pvars1(6:neqtot)
<a name="l00196"></a>00196   <span class="keyword">end if</span>
<a name="l00197"></a>00197 
<a name="l00198"></a>00198   <span class="comment">! Swap flux components to get correct fluxes for Y or Z</span>
<a name="l00199"></a>00199   <span class="keyword">if</span> (dimens.eq.DIM_Y) <span class="keyword">then</span>
<a name="l00200"></a>00200     call <a class="code" href="prims_8f90.html#ab943f29f1385451fbef5c1809312bece">swapxy</a>(flux)
<a name="l00201"></a>00201   <span class="keyword">else</span> <span class="keyword">if</span> (dimens.eq.DIM_Z) <span class="keyword">then</span>
<a name="l00202"></a>00202     call <a class="code" href="prims_8f90.html#a81acf562c7962cb3c8b6729a3c65d8ba">swapxz</a>(flux)
<a name="l00203"></a>00203   <span class="keyword">end if</span>
<a name="l00204"></a>00204 
<a name="l00205"></a>00205   return
<a name="l00206"></a>00206 
<a name="l00207"></a>00207 <span class="keyword">end subroutine prim2fluxes</span>
<a name="l00208"></a>00208 
<a name="l00209"></a>00209 <span class="comment">!===============================================================================</span>
<a name="l00210"></a>00210 
<a name="l00211"></a>00211 <span class="comment">! *** OBSOLETE ***</span>
<a name="l00212"></a>00212 <span class="comment">!subroutine prim2fluxesALT (pvars, dimf, flux)</span>
<a name="l00213"></a>00213 
<a name="l00214"></a>00214 <span class="comment">!  use parameters</span>
<a name="l00215"></a>00215 <span class="comment">!  implicit none</span>
<a name="l00216"></a>00216 
<a name="l00217"></a>00217 <span class="comment">!  real, intent(in) :: pvars(neqtot)</span>
<a name="l00218"></a>00218 <span class="comment">!  integer, intent(in) :: dimf</span>
<a name="l00219"></a>00219 <span class="comment">!  real, intent(out) :: flux(neqtot)</span>
<a name="l00220"></a>00220 
<a name="l00221"></a>00221 <span class="comment">!  real :: v2, etot</span>
<a name="l00222"></a>00222 
<a name="l00223"></a>00223 <span class="comment">!  v2 = pvars(2)**2 + pvars(3)**2 + pvars(4)**2</span>
<a name="l00224"></a>00224 <span class="comment">!  etot = 0.5*pvars(1)*v2 + CV*pvars(5)</span>
<a name="l00225"></a>00225 
<a name="l00226"></a>00226 <span class="comment">!  if (dimf.eq.DIM_X) then</span>
<a name="l00227"></a>00227 <span class="comment">!    flux(1) = pvars(1)*pvars(2)</span>
<a name="l00228"></a>00228 <span class="comment">!    flux(2) = pvars(5) + pvars(1)*(pvars(2)**2)</span>
<a name="l00229"></a>00229 <span class="comment">!    flux(3) = pvars(1)*pvars(2)*pvars(3)</span>
<a name="l00230"></a>00230 <span class="comment">!    flux(4) = pvars(1)*pvars(2)*pvars(4)</span>
<a name="l00231"></a>00231 <span class="comment">!    flux(5) = pvars(2)*(etot+pvars(5))</span>
<a name="l00232"></a>00232 <span class="comment">!  else if (dimf.eq.DIM_Y) then</span>
<a name="l00233"></a>00233 <span class="comment">!    flux(1) = pvars(1)*pvars(3)</span>
<a name="l00234"></a>00234 <span class="comment">!    flux(2) = pvars(1)*pvars(2)*pvars(3)</span>
<a name="l00235"></a>00235 <span class="comment">!    flux(3) = pvars(5) + pvars(1)*(pvars(3)**2)</span>
<a name="l00236"></a>00236 <span class="comment">!    flux(4) = pvars(1)*pvars(3)*pvars(4)</span>
<a name="l00237"></a>00237 <span class="comment">!    flux(5) = pvars(3)*(etot+pvars(5))</span>
<a name="l00238"></a>00238 <span class="comment">!  else if (dimf.eq.DIM_Z) then</span>
<a name="l00239"></a>00239 <span class="comment">!    flux(1) = pvars(1)*pvars(4)</span>
<a name="l00240"></a>00240 <span class="comment">!    flux(2) = pvars(1)*pvars(2)*pvars(4)</span>
<a name="l00241"></a>00241 <span class="comment">!    flux(3) = pvars(1)*pvars(3)*pvars(4)</span>
<a name="l00242"></a>00242 <span class="comment">!    flux(4) = pvars(5) + pvars(1)*(pvars(4)**2)</span>
<a name="l00243"></a>00243 <span class="comment">!    flux(5) = pvars(4)*(etot+pvars(5))</span>
<a name="l00244"></a>00244 <span class="comment">!  end if</span>
<a name="l00245"></a>00245 
<a name="l00246"></a>00246 <span class="comment">!  if (npassive.ge.1) then</span>
<a name="l00247"></a>00247 <span class="comment">!    flux(6:neqtot) = pvars(2)*pvars(6:neqtot)</span>
<a name="l00248"></a>00248 <span class="comment">!  end if</span>
<a name="l00249"></a>00249 
<a name="l00250"></a>00250 <span class="comment">!  return</span>
<a name="l00251"></a>00251 
<a name="l00252"></a>00252 <span class="comment">!end subroutine prim2fluxesALT</span>
<a name="l00253"></a>00253 
<a name="l00254"></a>00254 <span class="comment">!===============================================================================</span>
<a name="l00255"></a>00255 <span class="comment"></span>
<a name="l00256"></a>00256 !&gt; @brief Swaps the x and y components of a vector of hydro variables
<a name="l00257"></a>00257 !&gt; @param vec The vector to be swapped
<a name="l00258"></a><a class="code" href="prims_8f90.html#ab943f29f1385451fbef5c1809312bece">00258</a> <span class="keyword">subroutine </span><a class="code" href="prims_8f90.html#ab943f29f1385451fbef5c1809312bece">swapxy</a> (vec)
<a name="l00259"></a>00259 
<a name="l00260"></a>00260   use <span class="keywordflow">parameters</span>
<a name="l00261"></a>00261   <span class="keyword">implicit none</span>
<a name="l00262"></a>00262 
<a name="l00263"></a>00263   <span class="keywordtype">real</span>, <span class="keywordtype">intent(inout)</span> :: vec(neqtot)
<a name="l00264"></a>00264 
<a name="l00265"></a>00265   <span class="keywordtype">real</span> :: temp
<a name="l00266"></a>00266 
<a name="l00267"></a>00267   temp = vec(2)
<a name="l00268"></a>00268   vec(2) = vec(3)
<a name="l00269"></a>00269   vec(3) = temp
<a name="l00270"></a>00270 
<a name="l00271"></a>00271   return
<a name="l00272"></a>00272 
<a name="l00273"></a>00273 <span class="keyword">end subroutine swapxy</span>
<a name="l00274"></a>00274 
<a name="l00275"></a>00275 <span class="comment">!===============================================================================</span>
<a name="l00276"></a>00276 <span class="comment"></span>
<a name="l00277"></a>00277 !&gt; @brief Swaps the x and z components of a vector of hydro variables
<a name="l00278"></a>00278 !&gt; @param vec The vector to be swapped
<a name="l00279"></a><a class="code" href="prims_8f90.html#a81acf562c7962cb3c8b6729a3c65d8ba">00279</a> <span class="keyword">subroutine </span><a class="code" href="prims_8f90.html#a81acf562c7962cb3c8b6729a3c65d8ba">swapxz</a> (vec)
<a name="l00280"></a>00280 
<a name="l00281"></a>00281   use <span class="keywordflow">parameters</span>
<a name="l00282"></a>00282   <span class="keyword">implicit none</span>
<a name="l00283"></a>00283 
<a name="l00284"></a>00284   <span class="keywordtype">real</span>, <span class="keywordtype">intent(inout)</span> :: vec(neqtot)
<a name="l00285"></a>00285 
<a name="l00286"></a>00286   <span class="keywordtype">real</span> :: temp
<a name="l00287"></a>00287 
<a name="l00288"></a>00288   temp = vec(2)
<a name="l00289"></a>00289   vec(2) = vec(4)
<a name="l00290"></a>00290   vec(4) = temp
<a name="l00291"></a>00291 
<a name="l00292"></a>00292   return
<a name="l00293"></a>00293 
<a name="l00294"></a>00294 <span class="keyword">end subroutine swapxz</span>
</pre></div></div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Variables</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address style="text-align: right;"><small>Generated on Thu Jun 7 13:53:13 2012 for Walicxe3D by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.3 </small></address>
</body>
</html>
