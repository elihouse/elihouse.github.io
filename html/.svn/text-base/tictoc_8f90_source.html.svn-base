<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Walicxe3D: source/tictoc.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.html"><span>Modules</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.html"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.html"><span>File&nbsp;Members</span></a></li>
    </ul>
  </div>
<h1>source/tictoc.f90</h1><a href="tictoc_8f90.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">!===============================================================================</span><span class="comment"></span>
<a name="l00002"></a>00002 !&gt; @file tictoc.f90
<a name="l00003"></a>00003 !&gt; @brief Benchmarking module
<a name="l00004"></a>00004 !&gt; @author Juan C. Toledo
<a name="l00005"></a>00005 !&gt; @version 1.5
<a name="l00006"></a>00006 !&gt; @date 14/Dec/2011
<a name="l00007"></a>00007 
<a name="l00008"></a>00008 <span class="comment">! Copyright (c) 2012 Juan C. Toledo</span>
<a name="l00009"></a>00009 <span class="comment">!</span>
<a name="l00010"></a>00010 <span class="comment">! This program is free software; you can redistribute it and/or modify</span>
<a name="l00011"></a>00011 <span class="comment">! it under the terms of the GNU General Public License as published by</span>
<a name="l00012"></a>00012 <span class="comment">! the Free Software Foundation; either version 3 of the License, or</span>
<a name="l00013"></a>00013 <span class="comment">! (at your option) any later version.</span>
<a name="l00014"></a>00014 <span class="comment">!</span>
<a name="l00015"></a>00015 <span class="comment">! This program is distributed in the hope that it will be useful,</span>
<a name="l00016"></a>00016 <span class="comment">! but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00017"></a>00017 <span class="comment">! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>
<a name="l00018"></a>00018 <span class="comment">! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>
<a name="l00019"></a>00019 <span class="comment">! GNU General Public License for more details.</span>
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 <span class="comment">! You should have received a copy of the GNU General Public License</span>
<a name="l00022"></a>00022 <span class="comment">! along with this program.  If not, see http://www.gnu.org/licenses/.</span>
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 <span class="comment">!===============================================================================</span>
<a name="l00025"></a>00025 <span class="comment"></span>
<a name="l00026"></a>00026 !&gt; @brief Benchmarking functions
<a name="l00027"></a>00027 !&gt; @details Contains functions and subroutines designed to measure
<a name="l00028"></a>00028 !! the execution time between points in the program execution.
<a name="l00029"></a>00029 !&gt; @section changelog Changelog
<a name="l00030"></a>00030 !! @li @b 1.5
<a name="l00031"></a>00031 !! @c TOC now returns a real with the number of elapsed seconds, and two
<a name="l00032"></a>00032 !! new functions were added: @c FTIME accepts a real representing a
<a name="l00033"></a>00033 !! time span in seconds, and returns a character string with hours, minutes
<a name="l00034"></a>00034 !! and seconds, as needed. @c NICETOC receives an @c INTEGER time mark, passes it
<a name="l00035"></a>00035 !! to toc, and then returns the result of timeformat, i.e., a formatted
<a name="l00036"></a>00036 !! character string represented the time elapsed.
<a name="l00037"></a>00037 !! @li @b 1.4
<a name="l00038"></a>00038 !! Some subroutines were converted into functions that return
<a name="l00039"></a>00039 !! a character string instead of printing the result to screen.
<a name="l00040"></a>00040 !! @li @b 1.3
<a name="l00041"></a>00041 !! The subroutine @c ETA was added. It allows to estimate the remaining
<a name="l00042"></a>00042 !! execution time based on a user provided progress estimator.
<a name="l00043"></a>00043 !! @li @b 1.2
<a name="l00044"></a>00044 !! The intrinsic @c SYSTEM_CLOCK is now used instead of
<a name="l00045"></a>00045 !! @c DATE_AND_TIME to calculate time intervals. See Comments.
<a name="l00046"></a>00046 !! @li @b 1.1
<a name="l00047"></a>00047 !! @c STAMP was added to generate nicely formatted timestamps.
<a name="l00048"></a>00048 !! @li @b 1.0
<a name="l00049"></a>00049 !! First version.
<a name="l00050"></a>00050 !&gt; @section comments Comments
<a name="l00051"></a>00051 !! Starting from version 1.2, the module utilizes @c SYSTEM_CLOCK
<a name="l00052"></a>00052 !! instead of @c DATE_AND_TIME because it provides higher time
<a name="l00053"></a>00053 !! resolution. The disadvantage of this is that @c SYSTEM_CLOCK
<a name="l00054"></a>00054 !! has a relatively small looparound period, which is compiler-dependent.
<a name="l00055"></a>00055 !! For the GCC 4.2.1, this value is 24.855 days, so trying to measure
<a name="l00056"></a>00056 !! a time interval larger than this will produce incorrect results.
<a name="l00057"></a>00057 !! @n @n This program measures wall time.
<a name="l00058"></a>00058 !! @section usage Module Usage
<a name="l00059"></a>00059 !! Time measurements are done with the function pair @c TIC and @c TOC.
<a name="l00060"></a>00060 !! One must first call @c TIC to mark a certain point in the execution
<a name="l00061"></a>00061 !! of the program, and then @c TOC can be called at any later time in
<a name="l00062"></a>00062 !! order to calculate the elapsed time since the moment marked by @c TIC.
<a name="l00063"></a>00063 !! @n @n
<a name="l00064"></a>00064 !! Subroutine @c TIC modifies the given @c INTEGER argument @c mark storing
<a name="l00065"></a>00065 !! information about the point in time when it was called. Multiple
<a name="l00066"></a>00066 !! time marks (one variable per mark) can be used in the program to mark
<a name="l00067"></a>00067 !! different points. Time resolution is system dependent but is generally
<a name="l00068"></a>00068 !! on the order of milliseconds. 
<a name="l00069"></a>00069 !! @n @n
<a name="l00070"></a>00070 !! The @c ETA function estimates the execution time remaining. It must
<a name="l00071"></a>00071 !! be given a real number between 0 and 1 that indicates the percentage
<a name="l00072"></a>00072 !! progress of the execution at the moment of the call, as well as a time
<a name="l00073"></a>00073 !! mark obtained at the program start.
<a name="l00074"></a>00074 !! @n @n
<a name="l00075"></a>00075 !! The @c STAMP function returns a string with the current date and time.
<a name="l00076"></a>00076 !! It is common to call @c STAMP together with a call to @c TOC.
<a name="l00077"></a>00077 
<a name="l00078"></a>00078 <span class="comment">! ==============================================================================</span>
<a name="l00079"></a>00079 
<a name="l00080"></a><a class="code" href="namespacetictoc.html">00080</a> <span class="keyword">module</span> tictoc
<a name="l00081"></a>00081 
<a name="l00082"></a>00082   <span class="keyword">implicit none</span>
<a name="l00083"></a>00083 
<a name="l00084"></a>00084   <span class="keyword">contains</span>
<a name="l00085"></a>00085 
<a name="l00086"></a>00086 <span class="comment">! ==============================================================================</span>
<a name="l00087"></a>00087 <span class="comment"></span>
<a name="l00088"></a>00088   !&gt; @brief Creates a time mark
<a name="l00089"></a>00089   !&gt; @details Used to create a time mark at certain point in the execution.
<a name="l00090"></a>00090   !&gt; @retval mark An @c INTEGER representing a time mark
<a name="l00091"></a><a class="code" href="namespacetictoc.html#ab092f042aab35f2f6928c7b2f073b116">00091</a>   <span class="keyword">subroutine </span><a class="code" href="namespacetictoc.html#ab092f042aab35f2f6928c7b2f073b116">tic</a> (mark)    
<a name="l00092"></a>00092     <span class="keywordtype">integer</span>, <span class="keywordtype">intent(out)</span> :: mark
<a name="l00093"></a>00093     
<a name="l00094"></a>00094     call system_clock(mark)
<a name="l00095"></a>00095 
<a name="l00096"></a>00096 <span class="keyword">  end subroutine</span>
<a name="l00097"></a>00097 
<a name="l00098"></a>00098 <span class="comment">! ==============================================================================</span>
<a name="l00099"></a>00099 <span class="comment"></span>
<a name="l00100"></a>00100   !&gt; @brief Calculates the number of seconds elapsed since a given time mark
<a name="l00101"></a>00101   !&gt; @details Computes the elapsed number of seconds since a time mark
<a name="l00102"></a>00102   !! represented as an @c INTEGER previously returned by @c TIC.
<a name="l00103"></a>00103   !&gt; @return A @C REAL value with the number of elapsed seconds
<a name="l00104"></a><a class="code" href="namespacetictoc.html#af1cb6fb1d18d174b77579cc7cea51361">00104</a>   <span class="keyword">real </span><span class="keyword">function </span><a class="code" href="namespacetictoc.html#af1cb6fb1d18d174b77579cc7cea51361">toc</a> (mark)
<a name="l00105"></a>00105     <span class="keywordtype">integer</span>, <span class="keywordtype">intent(in)</span> :: mark
<a name="l00106"></a>00106 
<a name="l00107"></a>00107     <span class="keywordtype">integer</span> :: now, RATE, CMAX
<a name="l00108"></a>00108 
<a name="l00109"></a>00109     CALL system_clock(now,RATE,CMAX)
<a name="l00110"></a>00110 
<a name="l00111"></a>00111     <a class="code" href="namespacetictoc.html#af1cb6fb1d18d174b77579cc7cea51361">toc</a> = (now-mark)/<span class="keywordtype">real</span>(RATE)
<a name="l00112"></a>00112     return
<a name="l00113"></a>00113     
<a name="l00114"></a>00114 <span class="keyword">  end function</span>
<a name="l00115"></a>00115 
<a name="l00116"></a>00116 <span class="comment">! ==============================================================================</span>
<a name="l00117"></a>00117 <span class="comment"></span>
<a name="l00118"></a>00118   !&gt; @brief A &#39;nice&#39; version of toc which returns the time in hours, mins, secs
<a name="l00119"></a>00119   !&gt; @details Calls toc and then post-processes the result through timeformat.
<a name="l00120"></a>00120   !&gt; @return A character string with the elapsed hours, minutes and seconds.
<a name="l00121"></a><a class="code" href="namespacetictoc.html#a442a0695f535a607445218030cec1fa0">00121</a>   <span class="keyword">character(len=20) </span><span class="keyword">function </span><a class="code" href="namespacetictoc.html#a442a0695f535a607445218030cec1fa0">nicetoc</a> (mark)
<a name="l00122"></a>00122     <span class="keywordtype">integer</span>, <span class="keywordtype">intent(in)</span> :: mark
<a name="l00123"></a>00123 
<a name="l00124"></a>00124     <span class="keywordtype">real</span> :: secs
<a name="l00125"></a>00125     <span class="keywordtype">character(len=20) </span>:: buffer
<a name="l00126"></a>00126 
<a name="l00127"></a>00127     secs = <a class="code" href="namespacetictoc.html#af1cb6fb1d18d174b77579cc7cea51361">toc</a>(mark)
<a name="l00128"></a>00128     buffer = <a class="code" href="namespacetictoc.html#ac399315470593e2c46602fda55c24981">ftime</a>(secs)
<a name="l00129"></a>00129     <a class="code" href="namespacetictoc.html#a442a0695f535a607445218030cec1fa0">nicetoc</a> = buffer
<a name="l00130"></a>00130     return
<a name="l00131"></a>00131     
<a name="l00132"></a>00132 <span class="keyword">  end function</span>
<a name="l00133"></a>00133 
<a name="l00134"></a>00134 <span class="comment">! ==============================================================================</span>
<a name="l00135"></a>00135 <span class="comment"></span>
<a name="l00136"></a>00136   !&gt; @brief Returns a nice time representation in hours, minutes and seconds
<a name="l00137"></a>00137   !&gt; @details Accepts a @C REAL value with a number of seconds and returns
<a name="l00138"></a>00138   !! a character string with the time formatted as hours, minutes, seconds.
<a name="l00139"></a>00139   !&gt; @return A character string representingt the time laps in h, m, s
<a name="l00140"></a><a class="code" href="namespacetictoc.html#ac399315470593e2c46602fda55c24981">00140</a>   <span class="keyword">character(len=20) </span><span class="keyword">function </span><a class="code" href="namespacetictoc.html#ac399315470593e2c46602fda55c24981">ftime</a> (seconds)
<a name="l00141"></a>00141     <span class="keywordtype">real</span>, <span class="keywordtype">intent(in)</span> :: seconds
<a name="l00142"></a>00142 
<a name="l00143"></a>00143     <span class="keywordtype">integer</span> :: hours, mins
<a name="l00144"></a>00144     <span class="keywordtype">real</span> :: secs
<a name="l00145"></a>00145     <span class="keywordtype">character(len=20) </span>:: buffer
<a name="l00146"></a>00146 
<a name="l00147"></a>00147     hours = seconds/3600
<a name="l00148"></a>00148     mins = seconds/60 - hours*60
<a name="l00149"></a>00149     secs = seconds - hours*3600 - mins*60
<a name="l00150"></a>00150 
<a name="l00151"></a>00151     <span class="keyword">if</span> ((hours==0).and.(mins==0)) <span class="keyword">then</span>
<a name="l00152"></a>00152       201 format(F6.3,<span class="stringliteral">&#39;s&#39;</span>)
<a name="l00153"></a>00153       <span class="keyword">write</span>(buffer,201) secs
<a name="l00154"></a>00154     elseif (hours==0) <span class="keyword">then</span>
<a name="l00155"></a>00155       202 format(I2,<span class="stringliteral">&#39;m &#39;</span>,F6.3,<span class="stringliteral">&#39;s&#39;</span>)
<a name="l00156"></a>00156       <span class="keyword">write</span>(buffer,202) mins, secs
<a name="l00157"></a>00157     <span class="keyword">else</span>
<a name="l00158"></a>00158       203 format(I4,<span class="stringliteral">&#39;h &#39;</span>,I2,<span class="stringliteral">&#39;m &#39;</span>,F6.3,<span class="stringliteral">&#39;s&#39;</span>)
<a name="l00159"></a>00159       <span class="keyword">write</span>(buffer,203) hours, mins, secs
<a name="l00160"></a>00160     <span class="keyword">end if</span>
<a name="l00161"></a>00161 
<a name="l00162"></a>00162     <a class="code" href="namespacetictoc.html#ac399315470593e2c46602fda55c24981">ftime</a> = buffer
<a name="l00163"></a>00163     return
<a name="l00164"></a>00164     
<a name="l00165"></a>00165 <span class="keyword">  end function</span>
<a name="l00166"></a>00166 
<a name="l00167"></a>00167 <span class="comment">! ==============================================================================</span>
<a name="l00168"></a>00168 <span class="comment"></span>
<a name="l00169"></a>00169   !&gt; @brief Computes the estimated remaining time
<a name="l00170"></a>00170   !&gt; @details Returns the estimated remaining time of execution.
<a name="l00171"></a>00171   !! This requires a time mark previously returned by @c TIC marking
<a name="l00172"></a>00172   !! the start of execution (or, alternatively, a zero value), as well
<a name="l00173"></a>00173   !! as a progress value given as a real number between 0 and 1.
<a name="l00174"></a>00174   !&gt; @return A character string with the hours, minutes and seconds remaining.
<a name="l00175"></a><a class="code" href="namespacetictoc.html#a721a0b869389a3d55514cdc19e8fc4d3">00175</a>   <span class="keyword">character(len=20) </span><span class="keyword">function </span><a class="code" href="namespacetictoc.html#a721a0b869389a3d55514cdc19e8fc4d3">eta</a> (mark, progress)
<a name="l00176"></a>00176     <span class="keywordtype">integer</span>, <span class="keywordtype">intent(in)</span> :: mark
<a name="l00177"></a>00177     <span class="keywordtype">real</span>, <span class="keywordtype">intent(in)</span> :: progress
<a name="l00178"></a>00178 
<a name="l00179"></a>00179     <span class="keywordtype">integer</span> :: now, elapsed, remaining, RATE, CMAX
<a name="l00180"></a>00180     <span class="keywordtype">integer</span> :: hours, mins
<a name="l00181"></a>00181     <span class="keywordtype">real</span> :: secs
<a name="l00182"></a>00182     <span class="keywordtype">character(len=20) </span>:: buffer
<a name="l00183"></a>00183 
<a name="l00184"></a>00184     call system_clock(now,RATE,CMAX)
<a name="l00185"></a>00185 
<a name="l00186"></a>00186     elapsed = now - mark
<a name="l00187"></a>00187     remaining = elapsed/progress - elapsed
<a name="l00188"></a>00188 
<a name="l00189"></a>00189     hours = int(remaining/<span class="keywordtype">real</span>(RATE)/3600.)
<a name="l00190"></a>00190     mins = int(remaining/<span class="keywordtype">real</span>(RATE)/60.) - hours*60
<a name="l00191"></a>00191     secs = remaining/<span class="keywordtype">real(RATE)</span> - hours*3600 - mins*60
<a name="l00192"></a>00192 
<a name="l00193"></a>00193     <span class="keyword">if</span> ((hours==0).and.(mins==0)) <span class="keyword">then</span>
<a name="l00194"></a>00194       201 format(F6.3,<span class="stringliteral">&#39;s&#39;</span>)
<a name="l00195"></a>00195       <span class="keyword">write</span>(buffer,201) secs
<a name="l00196"></a>00196     elseif (hours==0) <span class="keyword">then</span>
<a name="l00197"></a>00197       202 format(I2,<span class="stringliteral">&#39;m &#39;</span>,F6.3,<span class="stringliteral">&#39;s&#39;</span>)
<a name="l00198"></a>00198       <span class="keyword">write</span>(buffer,202) mins, secs
<a name="l00199"></a>00199     <span class="keyword">else</span>
<a name="l00200"></a>00200       203 format(I4,<span class="stringliteral">&#39;h &#39;</span>,I2,<span class="stringliteral">&#39;m &#39;</span>,F6.3,<span class="stringliteral">&#39;s&#39;</span>)
<a name="l00201"></a>00201       <span class="keyword">write</span>(buffer,203) hours, mins, secs
<a name="l00202"></a>00202     <span class="keyword">end if</span>
<a name="l00203"></a>00203 
<a name="l00204"></a>00204     <a class="code" href="namespacetictoc.html#a721a0b869389a3d55514cdc19e8fc4d3">eta</a> = buffer
<a name="l00205"></a>00205     return
<a name="l00206"></a>00206 
<a name="l00207"></a>00207 <span class="keyword">    end function</span>
<a name="l00208"></a>00208 
<a name="l00209"></a>00209 <span class="comment">! ==============================================================================</span>
<a name="l00210"></a>00210 <span class="comment"></span>
<a name="l00211"></a>00211   !&gt; @brief Creates a timestamp
<a name="l00212"></a>00212   !&gt; @details Returns the current date and time in a nice format.
<a name="l00213"></a>00213   !&gt; @return A character string with the current date and time.  
<a name="l00214"></a><a class="code" href="namespacetictoc.html#a5191907338c319398babec30d7d2a984">00214</a>   <span class="keyword">character(len=22) </span><span class="keyword">function </span><a class="code" href="namespacetictoc.html#a5191907338c319398babec30d7d2a984">stamp</a> ()
<a name="l00215"></a>00215     
<a name="l00216"></a>00216     <span class="comment">! Local variables</span>
<a name="l00217"></a>00217     <span class="keywordtype">character(len=22) </span>:: buffer
<a name="l00218"></a>00218     <span class="keywordtype">integer</span> :: now(8)
<a name="l00219"></a>00219     <span class="keywordtype">character(8) </span>:: datestr
<a name="l00220"></a>00220     <span class="keywordtype">character(10) </span>:: time
<a name="l00221"></a>00221     <span class="keywordtype">character(5) </span>:: zone
<a name="l00222"></a>00222     <span class="keywordtype">character(3) </span>:: month
<a name="l00223"></a>00223 
<a name="l00224"></a>00224     call date_and_time(datestr,time,zone,now)
<a name="l00225"></a>00225 
<a name="l00226"></a>00226     <span class="keyword">select</span> <span class="keyword">case</span> (datestr(5:6))
<a name="l00227"></a>00227       <span class="keyword">case</span> (<span class="stringliteral">&#39;01&#39;</span>)
<a name="l00228"></a>00228         month = <span class="stringliteral">&#39;Jan&#39;</span>
<a name="l00229"></a>00229       <span class="keyword">case</span> (<span class="stringliteral">&#39;02&#39;</span>)
<a name="l00230"></a>00230         month = <span class="stringliteral">&#39;Feb&#39;</span>
<a name="l00231"></a>00231       <span class="keyword">case</span> (<span class="stringliteral">&#39;03&#39;</span>)
<a name="l00232"></a>00232         month = <span class="stringliteral">&#39;Mar&#39;</span>
<a name="l00233"></a>00233       <span class="keyword">case</span> (<span class="stringliteral">&#39;04&#39;</span>)
<a name="l00234"></a>00234         month = <span class="stringliteral">&#39;Apr&#39;</span>
<a name="l00235"></a>00235       <span class="keyword">case</span> (<span class="stringliteral">&#39;05&#39;</span>)
<a name="l00236"></a>00236         month = <span class="stringliteral">&#39;May&#39;</span>
<a name="l00237"></a>00237       <span class="keyword">case</span> (<span class="stringliteral">&#39;06&#39;</span>)
<a name="l00238"></a>00238         month = <span class="stringliteral">&#39;Jun&#39;</span>
<a name="l00239"></a>00239       <span class="keyword">case</span> (<span class="stringliteral">&#39;07&#39;</span>)
<a name="l00240"></a>00240         month = <span class="stringliteral">&#39;Jul&#39;</span>
<a name="l00241"></a>00241       <span class="keyword">case</span> (<span class="stringliteral">&#39;08&#39;</span>)
<a name="l00242"></a>00242         month = <span class="stringliteral">&#39;Aug&#39;</span>
<a name="l00243"></a>00243       <span class="keyword">case</span> (<span class="stringliteral">&#39;09&#39;</span>)
<a name="l00244"></a>00244         month = <span class="stringliteral">&#39;Sep&#39;</span>
<a name="l00245"></a>00245       <span class="keyword">case</span> (<span class="stringliteral">&#39;10&#39;</span>)
<a name="l00246"></a>00246         month = <span class="stringliteral">&#39;Oct&#39;</span>
<a name="l00247"></a>00247       <span class="keyword">case</span> (<span class="stringliteral">&#39;11&#39;</span>)
<a name="l00248"></a>00248         month = <span class="stringliteral">&#39;Nov&#39;</span>
<a name="l00249"></a>00249       <span class="keyword">case</span> (<span class="stringliteral">&#39;12&#39;</span>)
<a name="l00250"></a>00250         month = <span class="stringliteral">&#39;Dec&#39;</span>
<a name="l00251"></a>00251     <span class="keyword">end select</span>
<a name="l00252"></a>00252 
<a name="l00253"></a>00253     100 format(A,<span class="stringliteral">&#39;/&#39;</span>,A,<span class="stringliteral">&#39;/&#39;</span>,A,<span class="stringliteral">&#39; @ &#39;</span>,A,<span class="stringliteral">&#39;:&#39;</span>,A,<span class="stringliteral">&#39;:&#39;</span>,A)
<a name="l00254"></a>00254     <span class="keyword">write</span>(buffer,100) datestr(7:8), month, datestr(1:4), time(1:2),&amp;
<a name="l00255"></a>00255                       time(3:4), time(5:6)
<a name="l00256"></a>00256 
<a name="l00257"></a>00257     <a class="code" href="namespacetictoc.html#a5191907338c319398babec30d7d2a984">stamp</a> = buffer
<a name="l00258"></a>00258     return
<a name="l00259"></a>00259     
<a name="l00260"></a>00260 <span class="keyword">  end function</span>
<a name="l00261"></a>00261 
<a name="l00262"></a>00262 
<a name="l00263"></a>00263 <span class="keyword">end module</span>
</pre></div></div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Variables</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address style="text-align: right;"><small>Generated on Thu Jun 7 13:53:13 2012 for Walicxe3D by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.3 </small></address>
</body>
</html>
