<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Walicxe3D: source/parameters.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.html"><span>Modules</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.html"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.html"><span>File&nbsp;Members</span></a></li>
    </ul>
  </div>
<h1>source/parameters.f90</h1><a href="parameters_8f90.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">!===============================================================================</span><span class="comment"></span>
<a name="l00002"></a>00002 !&gt; @file parameters.f90
<a name="l00003"></a>00003 !&gt; @brief Code parameters module
<a name="l00004"></a>00004 !&gt; @author Juan C. Toledo
<a name="l00005"></a>00005 !&gt; @date 2/Jun/2011
<a name="l00006"></a>00006 
<a name="l00007"></a>00007 <span class="comment">! Copyright (c) 2012 Alejandro Esquivel and Juan C. Toledo</span>
<a name="l00008"></a>00008 <span class="comment">!</span>
<a name="l00009"></a>00009 <span class="comment">! This file is part of Walicxe3D.</span>
<a name="l00010"></a>00010 <span class="comment">!</span>
<a name="l00011"></a>00011 <span class="comment">! Walicxe3D is free software; you can redistribute it and/or modify</span>
<a name="l00012"></a>00012 <span class="comment">! it under the terms of the GNU General Public License as published by</span>
<a name="l00013"></a>00013 <span class="comment">! the Free Software Foundation; either version 3 of the License, or</span>
<a name="l00014"></a>00014 <span class="comment">! (at your option) any later version.</span>
<a name="l00015"></a>00015 <span class="comment">!</span>
<a name="l00016"></a>00016 <span class="comment">! This program is distributed in the hope that it will be useful,</span>
<a name="l00017"></a>00017 <span class="comment">! but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00018"></a>00018 <span class="comment">! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>
<a name="l00019"></a>00019 <span class="comment">! GNU General Public License for more details.</span>
<a name="l00020"></a>00020 <span class="comment">!</span>
<a name="l00021"></a>00021 <span class="comment">! You should have received a copy of the GNU General Public License</span>
<a name="l00022"></a>00022 <span class="comment">! along with this program.  If not, see http://www.gnu.org/licenses/.</span>
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 <span class="comment">!===============================================================================</span>
<a name="l00025"></a>00025 <span class="comment"></span>
<a name="l00026"></a>00026 !&gt; @brief Definition of code parameters
<a name="l00027"></a>00027 !&gt; @details This file declares most global runtime parameters (constants) used
<a name="l00028"></a>00028 !! by the code, most of them user-tweakable. It is included by most subroutines.
<a name="l00029"></a>00029 !! Any runtime piece of data required by the code should be included in this file.
<a name="l00030"></a><a class="code" href="namespaceparameters.html">00030</a> <span class="keyword">module</span> parameters
<a name="l00031"></a>00031 
<a name="l00032"></a>00032   use <span class="keywordflow">constants</span>
<a name="l00033"></a>00033 <span class="preprocessor">#ifdef MPIP</span>
<a name="l00034"></a>00034   use <span class="keywordflow">mpi</span>
<a name="l00035"></a>00035 <span class="preprocessor">#endif</span>
<a name="l00036"></a>00036 
<a name="l00037"></a>00037   <span class="keyword">implicit none</span>
<a name="l00038"></a>00038 
<a name="l00039"></a>00039   <span class="comment">! ============================================</span>
<a name="l00040"></a>00040   <span class="comment">! Execution parameters</span>
<a name="l00041"></a>00041 
<a name="l00042"></a><a class="code" href="namespaceparameters.html#a116853298330f20e6f76ed9e24033da4">00042</a>   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: tfin = 5.0e3 * YR    <span class="comment">!&lt; Final integration time (s)</span>
<a name="l00043"></a><a class="code" href="namespaceparameters.html#a2961ca692088688516e3f36d3d979724">00043</a>   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: dtout = 100 * YR     <span class="comment">!&lt; Time between data dumps (s)</span>
<a name="l00044"></a><a class="code" href="namespaceparameters.html#a40c7cb06a4db926729c92783029df274">00044</a>   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: nLoad = 50        <span class="comment">!&lt; Number of iterations before load balancing</span>
<a name="l00045"></a>00045 
<a name="l00046"></a><a class="code" href="namespaceparameters.html#aede5b9a2519bb6d017173c680fc3a923">00046</a>   <span class="keywordtype">logical</span>, <span class="keywordtype">parameter</span> :: dowarm = .true.       <span class="comment">!&lt; Perform warm start?</span>
<a name="l00047"></a><a class="code" href="namespaceparameters.html#a32bdb69196362d5ff4a77d0d76375cd4">00047</a>   <span class="keywordtype">character(*)</span>, <span class="keywordtype">parameter</span> :: warm_file = <span class="stringliteral">&quot;./BIN/State.0000.dat&quot;</span>      <span class="comment">!&lt; State file for warm start</span>
<a name="l00048"></a>00048  
<a name="l00049"></a>00049   <span class="comment">! ============================================</span>
<a name="l00050"></a>00050   <span class="comment">! MPI-related parameters</span>
<a name="l00051"></a>00051   
<a name="l00052"></a><a class="code" href="namespaceparameters.html#aeee0a4c8c28c1a1d5eff5a69344252e2">00052</a>   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: nProcs = 4    <span class="comment">!&lt; Number of processes for MPI</span>
<a name="l00053"></a><a class="code" href="namespaceparameters.html#acc398df3f99db205535fa41f7eed7ca0">00053</a>   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: master = 0    <span class="comment">!&lt; Rank of master process</span>
<a name="l00054"></a>00054  
<a name="l00055"></a>00055   <span class="comment">! ============================================</span>
<a name="l00056"></a>00056   <span class="comment">! Adaptive Mesh</span>
<a name="l00057"></a>00057 
<a name="l00058"></a>00058   <span class="comment">! Simulation Box physical size (all in cgs)</span>
<a name="l00059"></a><a class="code" href="namespaceparameters.html#a9e22320fb7618fda3bc341cea5219788">00059</a>   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: xphystot = 10.0 * PC    <span class="comment">!&lt; Physical box size along x</span>
<a name="l00060"></a><a class="code" href="namespaceparameters.html#af18112071ab2a9b0859b29cd6fe8690a">00060</a>   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: yphystot = 10.0 * PC    <span class="comment">!&lt; Physical box size along y</span>
<a name="l00061"></a><a class="code" href="namespaceparameters.html#adb0473e854e5a9b09db9f5e62d2795ab">00061</a>   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: zphystot = 10.0 * PC    <span class="comment">!&lt; Physical box size along z</span>
<a name="l00062"></a>00062 
<a name="l00063"></a>00063   <span class="comment">! Mesh Geometry</span>
<a name="l00064"></a>00064   
<a name="l00065"></a>00065   <span class="comment">! There are currently two ways to specify the mesh geometry:</span>
<a name="l00066"></a>00066   <span class="comment">! 1) MESH_AUTO: Specify max-level resolution.</span>
<a name="l00067"></a>00067   <span class="comment">!    This will automatically calculate the number</span>
<a name="l00068"></a>00068   <span class="comment">!    of root blocks and number of levels in the code.</span>
<a name="l00069"></a>00069   <span class="comment">! 2) MESH_MANUAL: Specify the number of root blocks and number of levels.</span>
<a name="l00070"></a>00070   <span class="comment">!    The max-level resolution will then be given by:</span>
<a name="l00071"></a>00071   <span class="comment">!    cells(max) = ncells_x * 2^(maxlev-1)</span>
<a name="l00072"></a>00072   <span class="comment">!    dx(max) = phys_size / cells(max)</span>
<a name="l00073"></a>00073   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: mesh_method = MESH_AUTO
<a name="l00074"></a>00074 
<a name="l00075"></a>00075   <span class="comment">! Only one of the following group of parameters will be used:</span>
<a name="l00076"></a>00076 
<a name="l00077"></a>00077   <span class="comment">! 1) MESH_AUTO</span>
<a name="l00078"></a>00078   <span class="comment">! Specify the maximum number of cells desired at the highest refinement level</span>
<a name="l00079"></a>00079   <span class="comment">! &gt; MUST BE POWERS OF TWO! &lt;</span>
<a name="l00080"></a>00080   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: p_maxcells_x = 256
<a name="l00081"></a>00081   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: p_maxcells_y = 256
<a name="l00082"></a>00082   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: p_maxcells_z = 256
<a name="l00083"></a>00083 
<a name="l00084"></a>00084   <span class="comment">! -- OR --</span>
<a name="l00085"></a>00085 
<a name="l00086"></a>00086   <span class="comment">! 2) MESH_MANUAL</span>
<a name="l00087"></a>00087   <span class="comment">! Specify number of root blocks along each dimension and number of refinement levels</span>
<a name="l00088"></a>00088   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: p_nbrootx = 1
<a name="l00089"></a>00089   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: p_nbrooty = 1
<a name="l00090"></a>00090   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: p_nbrootz = 1
<a name="l00091"></a>00091   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: p_maxlev = 5
<a name="l00092"></a>00092 
<a name="l00093"></a>00093   <span class="comment">! Other Mesh parameters</span>
<a name="l00094"></a>00094 
<a name="l00095"></a>00095   <span class="comment">! The max number of blocks per processor must be restricted by the amount</span>
<a name="l00096"></a>00096   <span class="comment">! of memory available to each processor. Each block requires a total of</span>
<a name="l00097"></a>00097   <span class="comment">!   (total # cells per block)*(# of equations)*(# bytes per REAL)</span>
<a name="l00098"></a>00098   <span class="comment">! where # bytes per REAL is 8 bytes in double precision or 4 bytes in single.</span>
<a name="l00099"></a><a class="code" href="namespaceparameters.html#a2ff4da7d081da9191c0d66918bf6625b">00099</a>   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: nbMaxProc = 1000    <span class="comment">!&lt; Max number of blocks per process</span>
<a name="l00100"></a>00100 
<a name="l00101"></a>00101   <span class="comment">! The number of cells per block is a tradeoff between saving memory and</span>
<a name="l00102"></a>00102   <span class="comment">! making parallelization efficient: making this number larger diminishes the</span>
<a name="l00103"></a>00103   <span class="comment">! relative memory hit of ghost cells, but also decreases the total number of</span>
<a name="l00104"></a>00104   <span class="comment">! blocks, thus reducing the efficiency of parallelization. Must be a power</span>
<a name="l00105"></a>00105   <span class="comment">! of two.</span>
<a name="l00106"></a><a class="code" href="namespaceparameters.html#ad032cf1de9e7d232d045a52ece9eae4b">00106</a>   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: ncells_x = 16      <span class="comment">!&lt; Number of cells per block along x</span>
<a name="l00107"></a><a class="code" href="namespaceparameters.html#aa52d0561bd220fc5f155b7d1932d8f1d">00107</a>   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: ncells_y = 16      <span class="comment">!&lt; Number of cells per block along y</span>
<a name="l00108"></a><a class="code" href="namespaceparameters.html#a568fe0267a053f4e31fc851dba5a1ede">00108</a>   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: ncells_z = 16      <span class="comment">!&lt; Number of cells per block along z</span>
<a name="l00109"></a>00109 
<a name="l00110"></a>00110   <span class="comment">! Refinement / Coarsening thresholds</span>
<a name="l00111"></a>00111   <span class="comment">! These are the maximum relative gradients require to mark a block for</span>
<a name="l00112"></a>00112   <span class="comment">! refinement or coarsening. Note: refineThres must be larger than coarseThres</span>
<a name="l00113"></a>00113   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: refineThres = 0.3
<a name="l00114"></a>00114   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: coarseThres = 0.15
<a name="l00115"></a>00115 
<a name="l00116"></a>00116   <span class="comment">! ============================================</span>
<a name="l00117"></a>00117   <span class="comment">! Boundary conditions</span>
<a name="l00118"></a>00118   
<a name="l00119"></a>00119   <span class="comment">! Currently recognized options are:</span>
<a name="l00120"></a>00120   <span class="comment">!  BC_REFLECTIVE: Reflective (velocity is reversed)</span>
<a name="l00121"></a>00121   <span class="comment">!  BC_FREE_FLOW: Free flow (zero-gradient)</span>
<a name="l00122"></a>00122   <span class="comment">!  BC_PERIODIC: periodic (wraps around)</span>
<a name="l00123"></a>00123   <span class="comment">!  BC_SPECIAL: special BCs (must be set elsewhere)</span>
<a name="l00124"></a>00124   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: bc_left   = BC_FREE_FLOW
<a name="l00125"></a>00125   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: bc_right  = BC_FREE_FLOW
<a name="l00126"></a>00126   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: bc_front  = BC_FREE_FLOW
<a name="l00127"></a>00127   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: bc_back   = BC_FREE_FLOW
<a name="l00128"></a>00128   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: bc_bottom = BC_FREE_FLOW
<a name="l00129"></a>00129   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: bc_top    = BC_FREE_FLOW
<a name="l00130"></a>00130 
<a name="l00131"></a>00131   <span class="comment">! ============================================</span>
<a name="l00132"></a>00132   <span class="comment">! Data output and logging</span>
<a name="l00133"></a>00133 
<a name="l00134"></a>00134   <span class="comment">! Data output formats</span>
<a name="l00135"></a>00135   <span class="comment">! output_bin: internal Walicxe3D binary format (required for warm starts)</span>
<a name="l00136"></a>00136   <span class="comment">! output_vtk: visit-compatible VTK format (includes visit metadata file)</span>
<a name="l00137"></a>00137   <span class="keywordtype">logical</span>, <span class="keywordtype">parameter</span> :: output_bin = .true.
<a name="l00138"></a>00138   <span class="keywordtype">logical</span>, <span class="keywordtype">parameter</span> :: output_vtk = .true.
<a name="l00139"></a>00139 
<a name="l00140"></a>00140   <span class="comment">! Write outputs using physical or code units?</span>
<a name="l00141"></a>00141   <span class="comment">! Currently recognized options:</span>
<a name="l00142"></a>00142   <span class="comment">!  CODE_UNITS: output in code (scaled) units</span>
<a name="l00143"></a>00143   <span class="comment">!  PHYS_UNITS: output in de-scaled physical units</span>
<a name="l00144"></a>00144   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: units_type = CODE_UNITS
<a name="l00145"></a>00145 
<a name="l00146"></a>00146   <span class="comment">! Datadir and data file templates</span>
<a name="l00147"></a>00147   <span class="comment">! In these file templates, a sequence of 3 Xs will be substituted by</span>
<a name="l00148"></a>00148   <span class="comment">! the processor number, while a sequence of 4 Ys will be substituted by</span>
<a name="l00149"></a>00149   <span class="comment">! the output number. A file extension will be appended depending on the</span>
<a name="l00150"></a>00150   <span class="comment">! selected format.</span>
<a name="l00151"></a><a class="code" href="namespaceparameters.html#a0324ce4a4c992e44a8ba6f91023eb435">00151</a>   <span class="keywordtype">character(*)</span>, <span class="keywordtype">parameter</span> :: datadir = <span class="stringliteral">&quot;./BIN/&quot;</span>              <span class="comment">!&lt; Path to data dir</span>
<a name="l00152"></a><a class="code" href="namespaceparameters.html#a037ae6dd8723e47ef3bd6d38ca97cc2f">00152</a>   <span class="keywordtype">character(*)</span>, <span class="keywordtype">parameter</span> :: blockstpl = <span class="stringliteral">&quot;BlocksXXX.YYYY&quot;</span>    <span class="comment">!&lt; Data blocks file template</span>
<a name="l00153"></a><a class="code" href="namespaceparameters.html#ac0f934eb207a27d885868b39b3f25c7d">00153</a>   <span class="keywordtype">character(*)</span>, <span class="keywordtype">parameter</span> :: gridtpl   = <span class="stringliteral">&quot;Grid.YYYY&quot;</span>         <span class="comment">!&lt; Grid file template</span>
<a name="l00154"></a><a class="code" href="namespaceparameters.html#a74deb63aed855d0fe59febbd228bb908">00154</a>   <span class="keywordtype">character(*)</span>, <span class="keywordtype">parameter</span> :: statetpl  = <span class="stringliteral">&quot;State.YYYY&quot;</span>        <span class="comment">!&lt; State file template</span>
<a name="l00155"></a>00155 
<a name="l00156"></a>00156   <span class="comment">! Log everything output to stdout in a logfile? If so, indicate the dir</span>
<a name="l00157"></a>00157   <span class="keywordtype">logical</span>, <span class="keywordtype">parameter</span> :: logged = .true.
<a name="l00158"></a>00158   <span class="keywordtype">character(*)</span>, <span class="keywordtype">parameter</span> :: logdir = <span class="stringliteral">&quot;./log/&quot;</span>
<a name="l00159"></a>00159 
<a name="l00160"></a>00160   <span class="comment">! ============================================</span>
<a name="l00161"></a>00161   <span class="comment">! Solver parameters</span>
<a name="l00162"></a>00162 
<a name="l00163"></a>00163   <span class="comment">! Numerical Integrator</span>
<a name="l00164"></a>00164   <span class="comment">! Currently recognized options:</span>
<a name="l00165"></a>00165   <span class="comment">!  SOLVER_LAX: First order Lax-Friedrichs scheme</span>
<a name="l00166"></a>00166   <span class="comment">!  SOLVER_HLL1: Simplified (first-order) HLL riemann solver</span>
<a name="l00167"></a>00167   <span class="comment">!  SOLVER_HLL: Full (second-order) HLL riemann solver  </span>
<a name="l00168"></a>00168   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: solver_type = SOLVER_HLL
<a name="l00169"></a>00169 
<a name="l00170"></a>00170   <span class="comment">! Slope Limiter (to be used with the HLL solver)</span>
<a name="l00171"></a>00171   <span class="comment">! Currently recognized options:</span>
<a name="l00172"></a>00172   <span class="comment">!  LIMITER_NONE: use arithmetic average, i.e., no limiter</span>
<a name="l00173"></a>00173   <span class="comment">!  LIMITER_MINMOD: Minmod limiter - most diffusive</span>
<a name="l00174"></a>00174   <span class="comment">!  LIMITER_FALLE: Falle limiter (Van Leer)</span>
<a name="l00175"></a>00175   <span class="comment">!  LIMITER_ALBADA: van Albada limiter</span>
<a name="l00176"></a>00176   <span class="comment">!  LIMITER_UMIST: UMIS limiter - least diffusive</span>
<a name="l00177"></a>00177   <span class="comment">!  LIMITER_WOORDWARD: Woodwar limiter (monotonized central difference)</span>
<a name="l00178"></a>00178   <span class="comment">!  LIMITER_SUPERBEE: Superbee limiter (tends to flatten circular waves)</span>
<a name="l00179"></a>00179   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: limiter_type = LIMITER_FALLE
<a name="l00180"></a>00180   
<a name="l00181"></a>00181   <span class="comment">! Radiative Cooling Type</span>
<a name="l00182"></a>00182   <span class="comment">! Currently recognized options:</span>
<a name="l00183"></a>00183   <span class="comment">!  COOL_NONE: no radiative cooling</span>
<a name="l00184"></a>00184   <span class="comment">!  COOL_DMC: Dalgarno-McCray coronal ionization equilibrium</span>
<a name="l00185"></a>00185   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: cooling_type = COOL_NONE
<a name="l00186"></a>00186   <span class="keywordtype">character(*)</span>, <span class="keywordtype">parameter</span> :: cooling_file = <span class="stringliteral">&quot;&quot;</span>
<a name="l00187"></a>00187 
<a name="l00188"></a>00188   <span class="comment">! General gas parameters</span>
<a name="l00189"></a><a class="code" href="namespaceparameters.html#ac02bd2a850bcfa6a99ba2652681c2f2b">00189</a>   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: gamma = 5.0/3.0   <span class="comment">!&lt; Heat capacity ratio</span>
<a name="l00190"></a><a class="code" href="namespaceparameters.html#a0d35bdb0c5f3e19fd70947bc005c4a74">00190</a>   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: mu0 = 1.3      <span class="comment">!&lt; Mean atomic mass of *neutral* gas (in AMUs)</span>
<a name="l00191"></a><a class="code" href="namespaceparameters.html#a3f22456e178fc757867044f2bb0e1306">00191</a>   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: mui = 0.61     <span class="comment">!&lt; Mean atomic mass of *ionized* gas (in AMUs)</span>
<a name="l00192"></a><a class="code" href="namespaceparameters.html#ae3f4f07453a0134ec697ed451e2c2312">00192</a>   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: ion_thres = 10000.0   <span class="comment">!&lt; Gas considered ionized avoce this temp (in K)</span>
<a name="l00193"></a>00193 
<a name="l00194"></a>00194   <span class="comment">! Integration parameters</span>
<a name="l00195"></a><a class="code" href="namespaceparameters.html#a77266c909da55f1e4906a3ace02ad467">00195</a>   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: neqhydro = 5   <span class="comment">!&lt; Number of hydro equations (conserved vars)</span>
<a name="l00196"></a><a class="code" href="namespaceparameters.html#ad0a00ea4db66b0ca30a5cda46b68b3d5">00196</a>   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: npassive = 0   <span class="comment">!&lt; Number of extra passive scalars</span>
<a name="l00197"></a><a class="code" href="namespaceparameters.html#a8891bcc77e190baf99ceea91db08fe23">00197</a>   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: nghost = 2     <span class="comment">!&lt; Number of ghost cells</span>
<a name="l00198"></a>00198 
<a name="l00199"></a>00199   <span class="comment">! Courant-Friedrichs-Lewis parameter (0 &lt; CFL &lt; 1.0)</span>
<a name="l00200"></a>00200   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: CFL = 0.5
<a name="l00201"></a>00201 
<a name="l00202"></a>00202   <span class="comment">! Artificial viscosity</span>
<a name="l00203"></a>00203   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: visc_eta = 0.05
<a name="l00204"></a>00204   
<a name="l00205"></a>00205   <span class="comment">! Unit Scalings</span>
<a name="l00206"></a>00206   <span class="comment">! Conversion factors between physical (CGS) and code units, defined by:</span>
<a name="l00207"></a>00207   <span class="comment">! phys_units = code_units * scaling_factor</span>
<a name="l00208"></a>00208   <span class="comment">! All other unit conversions are derived from these three</span>
<a name="l00209"></a><a class="code" href="namespaceparameters.html#a522e0ca69e61a46d801700b9a9ec9562">00209</a>   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: l_sc = 1.0*PC          <span class="comment">!&lt; length scale (cm)</span>
<a name="l00210"></a><a class="code" href="namespaceparameters.html#a77a1d6b631f1e11d8255aaf514eca4bd">00210</a>   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: d_sc = 1.0*mu0*AMU     <span class="comment">!&lt; density scale (g cm^-3)</span>
<a name="l00211"></a><a class="code" href="namespaceparameters.html#a0d2c1f79e56111b62e19f7e5cf117f20">00211</a>   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: v_sc = 3.2649e05       <span class="comment">!&lt; velocity scale (cm s^-1)</span>
<a name="l00212"></a>00212 <span class="comment">!  real, parameter :: l_sc = 1.0         !&lt; length scale (cm)</span>
<a name="l00213"></a>00213 <span class="comment">!  real, parameter :: d_sc = 1.0         !&lt; density scale (g cm^-3)</span>
<a name="l00214"></a>00214 <span class="comment">!  real, parameter :: v_sc = 1.0         !&lt; velocity scale (cm s^-1)</span>
<a name="l00215"></a>00215 
<a name="l00216"></a>00216   <span class="comment">! =====================</span>
<a name="l00217"></a>00217   <span class="comment">! Additional USER Parameters</span>
<a name="l00218"></a>00218 
<a name="l00219"></a>00219 
<a name="l00220"></a>00220 
<a name="l00221"></a>00221 
<a name="l00222"></a>00222   <span class="comment">! ========================================================================== !</span>
<a name="l00223"></a>00223   <span class="comment">!                                                                            !</span>
<a name="l00224"></a>00224   <span class="comment">!         Derived paramaters - NO NEED TO MODIFY BELOW THIS LINE             !</span>
<a name="l00225"></a>00225   <span class="comment">!                                                                            !</span>
<a name="l00226"></a>00226   <span class="comment">! ========================================================================== !</span>
<a name="l00227"></a>00227 <span class="comment"></span>
<a name="l00228"></a>00228   !&gt; Maximum number of blocks across all processors
<a name="l00229"></a><a class="code" href="namespaceparameters.html#a9956bfd2c200d8b3dd24e4294ed11770">00229</a>   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: nbMaxGlobal = nbMaxProc*nProcs
<a name="l00230"></a>00230 <span class="comment"></span>
<a name="l00231"></a>00231   !&gt; Number of equations to integrate
<a name="l00232"></a>00232   !! (flow variables + extra passive scalars)
<a name="l00233"></a><a class="code" href="namespaceparameters.html#a387f7be3c360ee28f921415cd15ae162">00233</a>   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: neqtot = neqhydro + npassive
<a name="l00234"></a>00234 
<a name="l00235"></a>00235   <span class="comment">! Data array bounds - includes ghost cells</span>
<a name="l00236"></a><a class="code" href="namespaceparameters.html#aeabb24541784029563e995c43ad53cbb">00236</a>   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: nxmin = 1-nghost          <span class="comment">!&lt; Data array bound, x low</span>
<a name="l00237"></a><a class="code" href="namespaceparameters.html#a95ba20e75d088a1a7e44cba35b8b5d35">00237</a>   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: nxmax = ncells_x+nghost   <span class="comment">!&lt; Data array bound, x high</span>
<a name="l00238"></a><a class="code" href="namespaceparameters.html#ad282ff0c74d4bb81ee68cfc10d5d87f7">00238</a>   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: nymin = 1-nghost          <span class="comment">!&lt; Data array bound, y low</span>
<a name="l00239"></a><a class="code" href="namespaceparameters.html#a98622e7e54b181bad682ae047fb70d13">00239</a>   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: nymax = ncells_y+nghost   <span class="comment">!&lt; Data array bound, y high</span>
<a name="l00240"></a><a class="code" href="namespaceparameters.html#af29e4054c757de70f8181dad0de0a8a2">00240</a>   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: nzmin = 1-nghost          <span class="comment">!&lt; Data array bound, z low</span>
<a name="l00241"></a><a class="code" href="namespaceparameters.html#ae4d53638bdd5c1eef3c3c464a857d861">00241</a>   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: nzmax = ncells_z+nghost   <span class="comment">!&lt; Data array bound, z high</span>
<a name="l00242"></a>00242 
<a name="l00243"></a>00243   <span class="comment">! Set floating point precision for reals in MPI messages</span>
<a name="l00244"></a>00244 <span class="preprocessor">#ifdef MPIP</span>
<a name="l00245"></a>00245 <span class="preprocessor">#ifdef DOUBLEP</span>
<a name="l00246"></a>00246   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: mpi_real_kind = MPI_DOUBLE_PRECISION
<a name="l00247"></a>00247 <span class="preprocessor">#else</span>
<a name="l00248"></a>00248   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: mpi_real_kind = MPI_REAL
<a name="l00249"></a>00249 <span class="preprocessor">#endif</span>
<a name="l00250"></a>00250 <span class="preprocessor">#endif</span>
<a name="l00251"></a>00251 
<a name="l00252"></a>00252   <span class="comment">! Calorific capacity at constant volume</span>
<a name="l00253"></a>00253   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: cv = 1.0/(gamma-1.0)
<a name="l00254"></a>00254  
<a name="l00255"></a>00255   <span class="comment">! Derived unit scalings</span>
<a name="l00256"></a>00256   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: p_sc = d_sc*v_sc**2
<a name="l00257"></a>00257   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: e_sc = p_sc
<a name="l00258"></a>00258   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: t_sc = l_sc/v_sc
<a name="l00259"></a>00259 
<a name="l00260"></a>00260 <span class="keyword">end module parameters</span>
</pre></div></div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Variables</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address style="text-align: right;"><small>Generated on Thu Jun 7 13:53:13 2012 for Walicxe3D by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.3 </small></address>
</body>
</html>
