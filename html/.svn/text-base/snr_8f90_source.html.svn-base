<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Walicxe3D: source/snr.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.html"><span>Modules</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.html"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.html"><span>File&nbsp;Members</span></a></li>
    </ul>
  </div>
<h1>source/snr.f90</h1><a href="snr_8f90.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">!===============================================================================</span><span class="comment"></span>
<a name="l00002"></a>00002 !&gt; @file snr.f90
<a name="l00003"></a>00003 !&gt; @brief Initial conditions module: supernova remnant
<a name="l00004"></a>00004 !&gt; @author Juan C. Toledo
<a name="l00005"></a>00005 !&gt; @date 2/Feb/2012
<a name="l00006"></a>00006 
<a name="l00007"></a>00007 <span class="comment">! Copyright (c) 2012 Alejandro Esquivel and Juan C. Toledo</span>
<a name="l00008"></a>00008 <span class="comment">!</span>
<a name="l00009"></a>00009 <span class="comment">! This file is part of Walicxe3D.</span>
<a name="l00010"></a>00010 <span class="comment">!</span>
<a name="l00011"></a>00011 <span class="comment">! Walicxe3D is free software; you can redistribute it and/or modify</span>
<a name="l00012"></a>00012 <span class="comment">! it under the terms of the GNU General Public License as published by</span>
<a name="l00013"></a>00013 <span class="comment">! the Free Software Foundation; either version 3 of the License, or</span>
<a name="l00014"></a>00014 <span class="comment">! (at your option) any later version.</span>
<a name="l00015"></a>00015 <span class="comment">!</span>
<a name="l00016"></a>00016 <span class="comment">! This program is distributed in the hope that it will be useful,</span>
<a name="l00017"></a>00017 <span class="comment">! but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00018"></a>00018 <span class="comment">! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>
<a name="l00019"></a>00019 <span class="comment">! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>
<a name="l00020"></a>00020 <span class="comment">! GNU General Public License for more details.</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="comment">! You should have received a copy of the GNU General Public License</span>
<a name="l00023"></a>00023 <span class="comment">! along with this program.  If not, see http://www.gnu.org/licenses/.</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="comment">!===============================================================================</span>
<a name="l00026"></a>00026 <span class="comment"></span>
<a name="l00027"></a>00027 !&gt; @brief Initial flow conditions for a supernova remnant
<a name="l00028"></a>00028 !&gt; @details This user-defined module establishes the parameters, variables and
<a name="l00029"></a>00029 !! subroutines required to initialize the flow.
<a name="l00030"></a>00030 !! How to use this module:
<a name="l00031"></a>00031 !! 1) Specify all the parameters in the REQUIRED PARAMETERS section. These are
<a name="l00032"></a>00032 !!    all mandatory and are required for initflow to function.
<a name="l00033"></a>00033 !! 2) Enter any aditional parameters or variables in the ADDITIONAL USER
<a name="l00034"></a>00034 !!    PARAMETERS section.
<a name="l00035"></a>00035 !! 3) Provide a initflow subroutine, which will be called by initflow after
<a name="l00036"></a>00036 !!    refining the basegrid to the required resolution for the
<a name="l00037"></a>00037 !!    IC zone. The code expects your subroutine to modify the flow variables
<a name="l00038"></a>00038 !!    (U array) appropriately to impose the desired ICs.
<a name="l00039"></a><a class="code" href="namespaceinitconds.html">00039</a> <span class="keyword">module</span> initconds
<a name="l00040"></a>00040 
<a name="l00041"></a>00041   use <span class="keywordflow">parameters</span>
<a name="l00042"></a>00042   <span class="keyword">implicit none</span>
<a name="l00043"></a>00043 
<a name="l00044"></a>00044   <span class="comment">! ============================================</span>
<a name="l00045"></a>00045   <span class="comment">! REQUIRED PARAMETERS - DO NOT remove entries to this section, for the code</span>
<a name="l00046"></a>00046   <span class="comment">! assumes these are defined</span>
<a name="l00047"></a>00047 
<a name="l00048"></a>00048   <span class="comment">! Ambient medium properties - all in CGS</span>
<a name="l00049"></a><a class="code" href="namespaceinitconds.html#ad0eeee45d8fae5760f9186cf032b6ce0">00049</a>   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: ism_mu0  = mu0    <span class="comment">!&lt; ISM mean atomic mass per particle (amu)</span>
<a name="l00050"></a><a class="code" href="namespaceinitconds.html#a1e26e2d0b38e1be08460e4bd81a45d90">00050</a>   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: ism_dens = 1.0 * mu0 * AMU   <span class="comment">!&lt; ISM gas density (g/cm^3)</span>
<a name="l00051"></a><a class="code" href="namespaceinitconds.html#a4d1af0532f56ffa8f98761795b9b0349">00051</a>   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: ism_temp = 1000.0   <span class="comment">!&lt; ISM temperature (K)</span>
<a name="l00052"></a><a class="code" href="namespaceinitconds.html#a71044e104ae25d13d71b03ba4f8e9d24">00052</a>   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: ism_vx = 0.0    <span class="comment">!&lt; ISM x-velocity (cm/s)</span>
<a name="l00053"></a><a class="code" href="namespaceinitconds.html#a4919c4807c6d1cab827df776f9630aca">00053</a>   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: ism_vy = 0.0    <span class="comment">!&lt; ISM y-velocity (cm/s)</span>
<a name="l00054"></a><a class="code" href="namespaceinitconds.html#a3c766e7a489d30047dbc8b5cc4e137fc">00054</a>   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: ism_vz = 0.0    <span class="comment">!&lt; ISM z-velocity (cm/s)</span>
<a name="l00055"></a>00055   
<a name="l00056"></a>00056   <span class="comment">! High resolution IC zone</span>
<a name="l00057"></a>00057   <span class="comment">! This zone is where non-uniform ICs will be imposed, and will be refined</span>
<a name="l00058"></a>00058   <span class="comment">! by initflow to provide adequate resolution. To this end, specify the</span>
<a name="l00059"></a>00059   <span class="comment">! *physical* (CGS) coordinates bounding the IC zone, and the refinement</span>
<a name="l00060"></a>00060   <span class="comment">! level on which the ICs will be imposed</span>
<a name="l00061"></a>00061   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: IC_left   = 4.75 * PC
<a name="l00062"></a>00062   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: IC_right  = 5.25 * PC
<a name="l00063"></a>00063   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: IC_front  = 4.75 * PC
<a name="l00064"></a>00064   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: IC_back   = 5.25 * PC
<a name="l00065"></a>00065   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: IC_bottom = 4.75 * PC
<a name="l00066"></a>00066   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: IC_top    = 5.25 * PC
<a name="l00067"></a>00067   <span class="keywordtype">integer</span>, <span class="keywordtype">parameter</span> :: IC_level = 5
<a name="l00068"></a>00068 
<a name="l00069"></a>00069   <span class="comment">! ============================================ </span>
<a name="l00070"></a>00070   <span class="comment">! ADDITIONAL PARAMETERS - any extra global parameters and variables that</span>
<a name="l00071"></a>00071   <span class="comment">! this IC needs go in this section</span>
<a name="l00072"></a>00072 
<a name="l00073"></a>00073   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: snr1_xc = 5.0 * PC
<a name="l00074"></a>00074   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: snr1_yc = 5.0 * PC
<a name="l00075"></a>00075   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: snr1_zc = 5.0 * PC
<a name="l00076"></a>00076   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: snr1_radius = 0.25 * PC
<a name="l00077"></a>00077   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: snr1_mass = 2.0 * MSUN
<a name="l00078"></a>00078   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: snr1_energy = 1e51
<a name="l00079"></a>00079   <span class="keywordtype">real</span>, <span class="keywordtype">parameter</span> :: snr1_chi = 0.5
<a name="l00080"></a>00080 
<a name="l00081"></a>00081   <span class="comment">! ============================================</span>
<a name="l00082"></a>00082 
<a name="l00083"></a>00083 <span class="keyword">contains</span>
<a name="l00084"></a>00084 
<a name="l00085"></a>00085   <span class="comment">! ============================================</span>
<a name="l00086"></a>00086 
<a name="l00087"></a>00087   <span class="comment">! This MANDATORY subroutine is called at the beginning of the simulation</span>
<a name="l00088"></a>00088   <span class="comment">! after the base grid is built and refined as required to accomodate the ICs.</span>
<a name="l00089"></a>00089   <span class="comment">! On exit, the subroutine MUST have set the FLOW variables (U) in EVERY</span>
<a name="l00090"></a>00090   <span class="comment">! physical cell of EVERY active block (ghost cells need not be set).</span>
<a name="l00091"></a>00091   <span class="keyword">subroutine </span>initflow ()
<a name="l00092"></a>00092 
<a name="l00093"></a>00093     use <span class="keywordflow">parameters</span>
<a name="l00094"></a>00094     use <span class="keywordflow">globals</span>
<a name="l00095"></a>00095     <span class="keyword">implicit none</span>
<a name="l00096"></a>00096 
<a name="l00097"></a>00097     <span class="keywordtype">integer</span> :: nb, bID, i, j, k
<a name="l00098"></a>00098     <span class="keywordtype">real</span> :: ism_pres
<a name="l00099"></a>00099     <span class="keywordtype">real</span> :: primit(neqtot), uvars(neqtot)
<a name="l00100"></a>00100 
<a name="l00101"></a>00101     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;&quot;</span>
<a name="l00102"></a>00102     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,<span class="stringliteral">&#39;(a)&#39;</span>) <span class="stringliteral">&quot;&gt; Imposing Initial Conditions ...&quot;</span>
<a name="l00103"></a>00103 
<a name="l00104"></a>00104     <span class="comment">! ==========================</span>
<a name="l00105"></a>00105 
<a name="l00106"></a>00106     <span class="comment">! Impose ISM</span>
<a name="l00107"></a>00107     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;&quot;</span>
<a name="l00108"></a>00108     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,<span class="stringliteral">&#39;(a)&#39;</span>) <span class="stringliteral">&quot;Setting ambient medium ...&quot;</span>
<a name="l00109"></a>00109 
<a name="l00110"></a>00110     <span class="comment">! ISM is assumed neutral</span>
<a name="l00111"></a>00111     ism_pres = <a class="code" href="namespaceinitconds.html#a1e26e2d0b38e1be08460e4bd81a45d90">ism_dens</a>/(<a class="code" href="namespaceinitconds.html#ad0eeee45d8fae5760f9186cf032b6ce0">ism_mu0</a>*AMU)*KB*<a class="code" href="namespaceinitconds.html#a4d1af0532f56ffa8f98761795b9b0349">ism_temp</a>
<a name="l00112"></a>00112 
<a name="l00113"></a>00113     <span class="comment">! DEBUG DEBUG</span>
<a name="l00114"></a>00114     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;DENSITY=&quot;</span>, <a class="code" href="namespaceinitconds.html#a1e26e2d0b38e1be08460e4bd81a45d90">ism_dens</a>, <a class="code" href="namespaceinitconds.html#a1e26e2d0b38e1be08460e4bd81a45d90">ism_dens</a>/<a class="code" href="namespaceparameters.html#a77a1d6b631f1e11d8255aaf514eca4bd">d_sc</a>
<a name="l00115"></a>00115     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;PRESSURE=&quot;</span>, ism_pres, ism_pres/p_sc
<a name="l00116"></a>00116     <span class="comment">! DEBUG DEBUG</span>
<a name="l00117"></a>00117 
<a name="l00118"></a>00118     <span class="keyword">do</span> nb=1,<a class="code" href="namespaceparameters.html#a2ff4da7d081da9191c0d66918bf6625b">nbMaxProc</a>
<a name="l00119"></a>00119       bID = <a class="code" href="namespaceglobals.html#adc845521f6ad2502bc19df43607224e0">localBlocks</a>(nb)
<a name="l00120"></a>00120       <span class="keyword">if</span> (bID.ne.-1) <span class="keyword">then</span>
<a name="l00121"></a>00121 
<a name="l00122"></a>00122         <span class="keyword">do</span> i=1,<a class="code" href="namespaceparameters.html#ad032cf1de9e7d232d045a52ece9eae4b">ncells_x</a>
<a name="l00123"></a>00123           <span class="keyword">do</span> j=1,<a class="code" href="namespaceparameters.html#aa52d0561bd220fc5f155b7d1932d8f1d">ncells_y</a>
<a name="l00124"></a>00124             <span class="keyword">do</span> k=1,<a class="code" href="namespaceparameters.html#a568fe0267a053f4e31fc851dba5a1ede">ncells_z</a>
<a name="l00125"></a>00125 
<a name="l00126"></a>00126                 <span class="comment">! Calculate scaled primitives for ISM</span>
<a name="l00127"></a>00127                 primit(1) = <a class="code" href="namespaceinitconds.html#a1e26e2d0b38e1be08460e4bd81a45d90">ism_dens</a>/<a class="code" href="namespaceparameters.html#a77a1d6b631f1e11d8255aaf514eca4bd">d_sc</a>
<a name="l00128"></a>00128                 primit(2) = <a class="code" href="namespaceinitconds.html#a71044e104ae25d13d71b03ba4f8e9d24">ism_vx</a>/<a class="code" href="namespaceparameters.html#a0d2c1f79e56111b62e19f7e5cf117f20">v_sc</a>
<a name="l00129"></a>00129                 primit(3) = <a class="code" href="namespaceinitconds.html#a4919c4807c6d1cab827df776f9630aca">ism_vy</a>/<a class="code" href="namespaceparameters.html#a0d2c1f79e56111b62e19f7e5cf117f20">v_sc</a>
<a name="l00130"></a>00130                 primit(4) = <a class="code" href="namespaceinitconds.html#a3c766e7a489d30047dbc8b5cc4e137fc">ism_vz</a>/<a class="code" href="namespaceparameters.html#a0d2c1f79e56111b62e19f7e5cf117f20">v_sc</a>
<a name="l00131"></a>00131                 primit(5) = ism_pres/p_sc
<a name="l00132"></a>00132                 <span class="keyword">if</span> (<a class="code" href="namespaceparameters.html#ad0a00ea4db66b0ca30a5cda46b68b3d5">npassive</a>.ge.1) <span class="keyword">then</span>
<a name="l00133"></a>00133                   primit(6:<a class="code" href="namespaceparameters.html#a387f7be3c360ee28f921415cd15ae162">neqtot</a>) = 0.0    <span class="comment">! passive scalars</span>
<a name="l00134"></a>00134                 <span class="keyword">end if</span>
<a name="l00135"></a>00135 
<a name="l00136"></a>00136                 <span class="comment">! Convert primitives and set flow vars for this cell</span>
<a name="l00137"></a>00137                 call <a class="code" href="prims_8f90.html#a8e75a6e601ab9110928efb7e59ab4453">prim2flow </a>(primit, uvars)
<a name="l00138"></a>00138                 <a class="code" href="namespaceglobals.html#a582706020cbc63411a5564cc9a01436f">U</a>(nb,:,i,j,k) = uvars(:)
<a name="l00139"></a>00139               
<a name="l00140"></a>00140             <span class="keyword">end do</span>
<a name="l00141"></a>00141           <span class="keyword">end do</span>
<a name="l00142"></a>00142         <span class="keyword">end do</span>
<a name="l00143"></a>00143 
<a name="l00144"></a>00144       <span class="comment">! DEBUG</span>
<a name="l00145"></a>00145 <span class="comment">!      write(logu,*) minval(U(nb,1,:,:,:)), maxval(U(nb,1,:,:,:))</span>
<a name="l00146"></a>00146       <span class="comment">! DEBUG</span>
<a name="l00147"></a>00147 
<a name="l00148"></a>00148       <span class="keyword">end if</span>
<a name="l00149"></a>00149     <span class="keyword">end do</span>
<a name="l00150"></a>00150 
<a name="l00151"></a>00151     <span class="comment">! ==========================</span>
<a name="l00152"></a>00152 
<a name="l00153"></a>00153     <span class="comment">! Detonate SN</span>
<a name="l00154"></a>00154     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;&quot;</span>
<a name="l00155"></a>00155     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,<span class="stringliteral">&#39;(a)&#39;</span>) <span class="stringliteral">&quot;Detonating SN ...&quot;</span>
<a name="l00156"></a>00156     call detonateSNR (snr1_xc, snr1_yc, snr1_zc, snr1_radius, snr1_mass, &amp;
<a name="l00157"></a>00157       snr1_energy, snr1_chi)
<a name="l00158"></a>00158 
<a name="l00159"></a>00159     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,<span class="stringliteral">&#39;(a)&#39;</span>) <span class="stringliteral">&quot;&gt; Done imposing ICs.&quot;</span>
<a name="l00160"></a>00160     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;&quot;</span>
<a name="l00161"></a>00161     
<a name="l00162"></a>00162 <span class="keyword">  end subroutine initflow</span>
<a name="l00163"></a>00163 
<a name="l00164"></a>00164   <span class="comment">! ============================================================================</span>
<a name="l00165"></a>00165   
<a name="l00166"></a>00166   <span class="comment">! This OPTIONAL subroutine specifies recurrent conditions imposed on the</span>
<a name="l00167"></a>00167   <span class="comment">! flow inside the computational box (i.e., not a boundary condition for</span>
<a name="l00168"></a>00168   <span class="comment">! ghost cells). It will be called by the main program once per timestep.</span>
<a name="l00169"></a>00169   <span class="comment">! It may be left blank if no recurrent flow conditions are desired.</span>
<a name="l00170"></a>00170   <span class="comment">! On exit, the subroutine MUST have modified the FLOW variables (U) in</span>
<a name="l00171"></a>00171   <span class="comment">! the the appropriate region of the mesh (do not change ghost cells)</span>
<a name="l00172"></a>00172   <span class="keyword">subroutine </span>periodicflow ()
<a name="l00173"></a>00173 
<a name="l00174"></a>00174     use <span class="keywordflow">parameters</span>
<a name="l00175"></a>00175     use <span class="keywordflow">globals</span>
<a name="l00176"></a>00176     <span class="keyword">implicit none</span>
<a name="l00177"></a>00177 
<a name="l00178"></a>00178     return
<a name="l00179"></a>00179 
<a name="l00180"></a>00180 <span class="keyword">  end subroutine periodicflow</span>
<a name="l00181"></a>00181 
<a name="l00182"></a>00182   <span class="comment">! ============================================================================</span>
<a name="l00183"></a>00183 
<a name="l00184"></a>00184   <span class="comment">! Additional USER subroutines follow</span>
<a name="l00185"></a>00185   <span class="comment">! Add any auxiliary subroutines needed by initflow or periodicflow</span>
<a name="l00186"></a>00186   <span class="comment">! for this IC module</span>
<a name="l00187"></a>00187 
<a name="l00188"></a>00188   <span class="comment">! ============================================</span>
<a name="l00189"></a>00189 
<a name="l00190"></a>00190   <span class="comment">! Simulates the detonation of a supernova by imposing appropriate flow</span>
<a name="l00191"></a>00191   <span class="comment">! conditions in a region of radius RSN centered at (xc,yc,zc), having</span>
<a name="l00192"></a>00192   <span class="comment">! a total mass of MSN, a total (kinetic+thermal) energy of ESN, where</span>
<a name="l00193"></a>00193   <span class="comment">! chi indicates what ratio goes into kinetic energy</span>
<a name="l00194"></a>00194   <span class="keyword">subroutine </span>detonateSNR (xc, yc, zc, RSN, MSN, ESN, chi)
<a name="l00195"></a>00195 
<a name="l00196"></a>00196     use <span class="keywordflow">parameters</span>
<a name="l00197"></a>00197     use <span class="keywordflow">globals</span>
<a name="l00198"></a>00198 
<a name="l00199"></a>00199     <span class="keywordtype">real</span>, <span class="keywordtype">intent(in)</span> :: xc, yc, zc
<a name="l00200"></a>00200     <span class="keywordtype">real</span>, <span class="keywordtype">intent(in)</span> :: RSN, MSN, ESN, chi    
<a name="l00201"></a>00201 
<a name="l00202"></a>00202     <span class="keywordtype">integer</span> :: nb, bID, i, j, k
<a name="l00203"></a>00203     <span class="keywordtype">real</span> :: x, y, z, dist
<a name="l00204"></a>00204     <span class="keywordtype">real(kind=8) </span>:: Ek, Et, Pres, Dens, Vmax
<a name="l00205"></a>00205     <span class="keywordtype">real(kind=8) </span>:: Dens0, Pres0, Vx0, Vy0, Vz0
<a name="l00206"></a>00206     <span class="keywordtype">real(kind=8) </span>:: Vel, Vx, Vy, Vz
<a name="l00207"></a>00207     <span class="keywordtype">real</span> :: primit(neqtot), uvars(neqtot)
<a name="l00208"></a>00208 
<a name="l00209"></a>00209     <span class="comment">! Calculate intermediate stuff in cgs</span>
<a name="l00210"></a>00210     Ek = chi*ESN
<a name="l00211"></a>00211     Et = (1.0-chi)*ESN
<a name="l00212"></a>00212     Dens = MSN/(4.0/3.0*PI*RSN**3)
<a name="l00213"></a>00213 <span class="comment">!    Vmax = sqrt(2.0*Ek/mass)        ! for constant v(r) profile</span>
<a name="l00214"></a>00214     Vmax = sqrt(10.0/3.0*Ek/MSN)     <span class="comment">! for linear v(r) profile</span>
<a name="l00215"></a>00215     Pres = (1.0/CV)*Et/(4.0/3.0*PI*RSN**3)
<a name="l00216"></a>00216 
<a name="l00217"></a>00217     <span class="comment">! DEBUG</span>
<a name="l00218"></a>00218     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;SNR vars:&quot;</span>
<a name="l00219"></a>00219     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;Ek=&quot;</span>, Ek
<a name="l00220"></a>00220     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;Et=&quot;</span>, Et
<a name="l00221"></a>00221     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;Dens=&quot;</span>, Dens
<a name="l00222"></a>00222     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;Vmax=&quot;</span>, Vmax
<a name="l00223"></a>00223     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;Pres=&quot;</span>, Pres
<a name="l00224"></a>00224     <span class="comment">! DEBUG</span>
<a name="l00225"></a>00225 
<a name="l00226"></a>00226     <span class="keyword">do</span> nb=1,<a class="code" href="namespaceparameters.html#a2ff4da7d081da9191c0d66918bf6625b">nbMaxProc</a>
<a name="l00227"></a>00227       bID = <a class="code" href="namespaceglobals.html#adc845521f6ad2502bc19df43607224e0">localBlocks</a>(nb)
<a name="l00228"></a>00228       <span class="keyword">if</span> (bID.ne.-1) <span class="keyword">then</span>
<a name="l00229"></a>00229 
<a name="l00230"></a>00230         <span class="keyword">do</span> i=1,<a class="code" href="namespaceparameters.html#ad032cf1de9e7d232d045a52ece9eae4b">ncells_x</a>
<a name="l00231"></a>00231           <span class="keyword">do</span> j=1,<a class="code" href="namespaceparameters.html#aa52d0561bd220fc5f155b7d1932d8f1d">ncells_y</a>
<a name="l00232"></a>00232             <span class="keyword">do</span> k=1,<a class="code" href="namespaceparameters.html#a568fe0267a053f4e31fc851dba5a1ede">ncells_z</a>
<a name="l00233"></a>00233 
<a name="l00234"></a>00234               call <a class="code" href="admesh_8f90.html#a05707d1dd21fefa65fa00167bf69a7f4">cellPos </a>(bID, i, j, k, x, y, z)
<a name="l00235"></a>00235               x = x*<a class="code" href="namespaceparameters.html#a522e0ca69e61a46d801700b9a9ec9562">l_sc</a>;  y = y*<a class="code" href="namespaceparameters.html#a522e0ca69e61a46d801700b9a9ec9562">l_sc</a>;  z = z*<a class="code" href="namespaceparameters.html#a522e0ca69e61a46d801700b9a9ec9562">l_sc</a>
<a name="l00236"></a>00236               dist = sqrt((x-xc)**2+(y-yc)**2+(z-zc)**2)   <span class="comment">! phys units</span>
<a name="l00237"></a>00237 
<a name="l00238"></a>00238               <span class="comment">! DEBUG</span>
<a name="l00239"></a>00239 <span class="comment">!              write(logu,*) &quot;CELL coords:&quot;, x/PC, y/PC, z/PC</span>
<a name="l00240"></a>00240 <span class="comment">!              write(logu,*) &quot;dist to center of SN=&quot;, dist/PC</span>
<a name="l00241"></a>00241 <span class="comment">!              write(logu,*) &quot;RSN=&quot;, RSN/PC</span>
<a name="l00242"></a>00242 
<a name="l00243"></a>00243               <span class="keyword">if</span> (dist.lt.RSN) <span class="keyword">then</span>
<a name="l00244"></a>00244 
<a name="l00245"></a>00245                 <span class="comment">! DEBUG</span>
<a name="l00246"></a>00246 <span class="comment">!                write(logu,*) &quot;Cell&quot;, x, y, z, &quot;in SNR region&quot;</span>
<a name="l00247"></a>00247 
<a name="l00248"></a>00248                 <span class="comment">! Calculate velocity components</span>
<a name="l00249"></a>00249                 Vel = (dist/RSN)*Vmax
<a name="l00250"></a>00250                 Vx = Vel*(x-xc)/dist
<a name="l00251"></a>00251                 Vy = Vel*(y-yc)/dist
<a name="l00252"></a>00252                 Vz = Vel*(z-zc)/dist
<a name="l00253"></a>00253 
<a name="l00254"></a>00254                 <span class="comment">! Scale primitives</span>
<a name="l00255"></a>00255                 primit(1) = Dens/<a class="code" href="namespaceparameters.html#a77a1d6b631f1e11d8255aaf514eca4bd">d_sc</a>
<a name="l00256"></a>00256                 primit(2) = Vx/<a class="code" href="namespaceparameters.html#a0d2c1f79e56111b62e19f7e5cf117f20">v_sc</a>
<a name="l00257"></a>00257                 primit(3) = Vy/<a class="code" href="namespaceparameters.html#a0d2c1f79e56111b62e19f7e5cf117f20">v_sc</a>
<a name="l00258"></a>00258                 primit(4) = Vz/<a class="code" href="namespaceparameters.html#a0d2c1f79e56111b62e19f7e5cf117f20">v_sc</a>
<a name="l00259"></a>00259                 primit(5) = Pres/p_sc
<a name="l00260"></a>00260          
<a name="l00261"></a>00261                 <span class="keyword">if</span> (<a class="code" href="namespaceparameters.html#ad0a00ea4db66b0ca30a5cda46b68b3d5">npassive</a>.ge.1) <span class="keyword">then</span>
<a name="l00262"></a>00262                   primit(6:<a class="code" href="namespaceparameters.html#a387f7be3c360ee28f921415cd15ae162">neqtot</a>) = 0.0    <span class="comment">! passive scalars</span>
<a name="l00263"></a>00263                 <span class="keyword">end if</span>
<a name="l00264"></a>00264 
<a name="l00265"></a>00265                 <span class="comment">! Convert primitives and set flow vars for this cell</span>
<a name="l00266"></a>00266                 call <a class="code" href="prims_8f90.html#a8e75a6e601ab9110928efb7e59ab4453">prim2flow </a>(primit, uvars)
<a name="l00267"></a>00267                 <a class="code" href="namespaceglobals.html#a582706020cbc63411a5564cc9a01436f">U</a>(nb,:,i,j,k) = uvars(:)
<a name="l00268"></a>00268 
<a name="l00269"></a>00269               <span class="keyword">end if</span>
<a name="l00270"></a>00270 
<a name="l00271"></a>00271             <span class="keyword">end do</span>
<a name="l00272"></a>00272           <span class="keyword">end do</span>
<a name="l00273"></a>00273         <span class="keyword">end do</span>
<a name="l00274"></a>00274 
<a name="l00275"></a>00275       <span class="keyword">end if</span>
<a name="l00276"></a>00276     <span class="keyword">end do</span>
<a name="l00277"></a>00277 
<a name="l00278"></a>00278 
<a name="l00279"></a>00279 <span class="keyword">  end subroutine detonateSNR</span>
<a name="l00280"></a>00280 
<a name="l00281"></a>00281 
<a name="l00282"></a>00282 <span class="keyword">end module initconds</span>
</pre></div></div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Variables</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address style="text-align: right;"><small>Generated on Thu Jun 7 13:53:13 2012 for Walicxe3D by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.3 </small></address>
</body>
</html>
