<!-- This comment will put IE 6, 7 and 8 in quirks mode -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Walicxe3D: source/hydro.f90 Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.6.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.html"><span>Modules</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <img id="MSearchSelect" src="search/search.png"
             onmouseover="return searchBox.OnSearchSelectShow()"
             onmouseout="return searchBox.OnSearchSelectHide()"
             alt=""/>
        <input type="text" id="MSearchField" value="Search" accesskey="S"
             onfocus="searchBox.OnSearchFieldFocus(true)" 
             onblur="searchBox.OnSearchFieldFocus(false)" 
             onkeyup="searchBox.OnSearchFieldChange(event)"/>
        <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.html"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.html"><span>File&nbsp;Members</span></a></li>
    </ul>
  </div>
<h1>source/hydro.f90</h1><a href="hydro_8f90.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">!===============================================================================</span><span class="comment"></span>
<a name="l00002"></a>00002 !&gt; @file hydro.f90
<a name="l00003"></a>00003 !&gt; @brief Hydrodynamical solver
<a name="l00004"></a>00004 !&gt; @author Juan C. Toledo
<a name="l00005"></a>00005 !&gt; @date 7/Mar/2012
<a name="l00006"></a>00006 
<a name="l00007"></a>00007 <span class="comment">! Copyright (c) 2012 Alejandro Esquivel and Juan C. Toledo</span>
<a name="l00008"></a>00008 <span class="comment">!</span>
<a name="l00009"></a>00009 <span class="comment">! This file is part of Walicxe3D.</span>
<a name="l00010"></a>00010 <span class="comment">!</span>
<a name="l00011"></a>00011 <span class="comment">! Walicxe3D is free software; you can redistribute it and/or modify</span>
<a name="l00012"></a>00012 <span class="comment">! it under the terms of the GNU General Public License as published by</span>
<a name="l00013"></a>00013 <span class="comment">! the Free Software Foundation; either version 3 of the License, or</span>
<a name="l00014"></a>00014 <span class="comment">! (at your option) any later version.</span>
<a name="l00015"></a>00015 <span class="comment">!</span>
<a name="l00016"></a>00016 <span class="comment">! This program is distributed in the hope that it will be useful,</span>
<a name="l00017"></a>00017 <span class="comment">! but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00018"></a>00018 <span class="comment">! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>
<a name="l00019"></a>00019 <span class="comment">! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span>
<a name="l00020"></a>00020 <span class="comment">! GNU General Public License for more details.</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="comment">! You should have received a copy of the GNU General Public License</span>
<a name="l00023"></a>00023 <span class="comment">! along with this program.  If not, see http://www.gnu.org/licenses/.</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="comment">!===============================================================================</span>
<a name="l00026"></a>00026 <span class="comment"></span>
<a name="l00027"></a>00027 !&gt; @brief High-level wrapper for the numerical integrator
<a name="l00028"></a><a class="code" href="hydro_8f90.html#a98ad18bb5b4193f77f0cb2311c8c6a2f">00028</a> <span class="keyword">subroutine </span><a class="code" href="hydro_8f90.html#a98ad18bb5b4193f77f0cb2311c8c6a2f">hydroSolver</a> ()
<a name="l00029"></a>00029 
<a name="l00030"></a>00030   use <span class="keywordflow">parameters</span>
<a name="l00031"></a>00031   use <span class="keywordflow">globals</span>
<a name="l00032"></a>00032   use <span class="keywordflow">tictoc</span>
<a name="l00033"></a>00033   <span class="keyword">implicit none</span>
<a name="l00034"></a>00034 
<a name="l00035"></a>00035   <span class="keywordtype">integer</span> :: mark, mark1
<a name="l00036"></a>00036 
<a name="l00037"></a>00037   call <a class="code" href="namespacetictoc.html#ab092f042aab35f2f6928c7b2f073b116">tic</a>(mark)
<a name="l00038"></a>00038   <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;&quot;</span>
<a name="l00039"></a>00039   <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,<span class="stringliteral">&#39;(1x,a)&#39;</span>) <span class="stringliteral">&quot;============================================&quot;</span>
<a name="l00040"></a>00040   <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,<span class="stringliteral">&#39;(1x,a)&#39;</span>) <span class="stringliteral">&quot; Integrating hydrodynamical equations ...&quot;</span>
<a name="l00041"></a>00041   <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,<span class="stringliteral">&#39;(1x,a)&#39;</span>) <span class="stringliteral">&quot;============================================&quot;</span>
<a name="l00042"></a>00042   <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;&quot;</span>
<a name="l00043"></a>00043 
<a name="l00044"></a>00044   <span class="comment">! Compute global timestep</span>
<a name="l00045"></a>00045   call <a class="code" href="namespacetictoc.html#ab092f042aab35f2f6928c7b2f073b116">tic</a>(mark1)
<a name="l00046"></a>00046   <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,<span class="stringliteral">&#39;(1x,a)&#39;</span>) <span class="stringliteral">&quot;&gt; Calculating timestep ...&quot;</span>
<a name="l00047"></a>00047   call <a class="code" href="hydro_8f90.html#adc9b3deba845cc61b81e340c68225b02">getTimestep </a>(<a class="code" href="namespaceglobals.html#aa3ddc705be99dfda363bf5e2850d075e">dt</a>)
<a name="l00048"></a>00048   <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,<span class="stringliteral">&#39;(1x,a,es12.6,a)&#39;</span>) <span class="stringliteral">&quot;dt= &quot;</span>, <a class="code" href="namespaceglobals.html#aa3ddc705be99dfda363bf5e2850d075e">dt</a>, <span class="stringliteral">&quot; code units&quot;</span>
<a name="l00049"></a>00049   <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,<span class="stringliteral">&#39;(1x,a,f12.6,a)&#39;</span>) <span class="stringliteral">&quot;dt= &quot;</span>, <a class="code" href="namespaceglobals.html#aa3ddc705be99dfda363bf5e2850d075e">dt</a>*t_sc/YR, <span class="stringliteral">&quot; yr&quot;</span>
<a name="l00050"></a>00050   <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,<span class="stringliteral">&#39;(1x,a,a)&#39;</span>) <span class="stringliteral">&quot;Timestep calculated in &quot;</span>, <a class="code" href="namespacetictoc.html#a442a0695f535a607445218030cec1fa0">nicetoc</a>(mark1)
<a name="l00051"></a>00051 
<a name="l00052"></a>00052   <span class="comment">! Call appropriate numerical solver</span>
<a name="l00053"></a>00053   <span class="comment">! Once this routine returns, the UPs are expected to have correct</span>
<a name="l00054"></a>00054   <span class="comment">! timestepped values in all physical cells (ghost cells are unimportant)</span>
<a name="l00055"></a>00055   call <a class="code" href="namespacetictoc.html#ab092f042aab35f2f6928c7b2f073b116">tic</a>(mark1)
<a name="l00056"></a>00056 
<a name="l00057"></a>00057   <span class="keyword">select</span> <span class="keyword">case</span> (solver_type)
<a name="l00058"></a>00058   
<a name="l00059"></a>00059   <span class="keyword">case</span> (SOLVER_LAX)
<a name="l00060"></a>00060     call <a class="code" href="hydro_8f90.html#aeb1082eef0fc6de15e26f8417018f7a7">LaxFriedrichs </a>()
<a name="l00061"></a>00061 
<a name="l00062"></a>00062   <span class="keyword">case</span> (SOLVER_HLL1)
<a name="l00063"></a>00063     call <a class="code" href="hydro_8f90.html#a14aa08225afe7e78232a70faed8ad223">HLL </a>(1)
<a name="l00064"></a>00064     
<a name="l00065"></a>00065   <span class="keyword">case</span> (SOLVER_HLL)
<a name="l00066"></a>00066     call <a class="code" href="hydro_8f90.html#a14aa08225afe7e78232a70faed8ad223">HLL </a>(2)
<a name="l00067"></a>00067     
<a name="l00068"></a>00068   <span class="keyword">end select</span>
<a name="l00069"></a>00069   
<a name="l00070"></a>00070   <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;&quot;</span>
<a name="l00071"></a>00071   <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,<span class="stringliteral">&#39;(1x,a,a)&#39;</span>) <span class="stringliteral">&quot;Integrator (total)=&quot;</span>, <a class="code" href="namespacetictoc.html#a442a0695f535a607445218030cec1fa0">nicetoc</a>(mark1)
<a name="l00072"></a>00072 
<a name="l00073"></a>00073   <span class="comment">! Apply radiative cooling, if active</span>
<a name="l00074"></a>00074   
<a name="l00075"></a>00075 
<a name="l00076"></a>00076   <span class="comment">! Advance simulation state</span>
<a name="l00077"></a>00077   call <a class="code" href="namespacetictoc.html#ab092f042aab35f2f6928c7b2f073b116">tic</a>(mark1)
<a name="l00078"></a>00078   call <a class="code" href="hydro_8f90.html#a2540d0d208baf158ad6ab311e76a88b6">doStep</a>()
<a name="l00079"></a>00079   <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;Stepping=&quot;</span>, <a class="code" href="namespacetictoc.html#a442a0695f535a607445218030cec1fa0">nicetoc</a>(mark1)
<a name="l00080"></a>00080 
<a name="l00081"></a>00081   <span class="comment">! Update primitives in all blocks</span>
<a name="l00082"></a>00082 <span class="comment">!  call tic(mark1)</span>
<a name="l00083"></a>00083 <span class="comment">!  call updatePrims (U, PRIM)</span>
<a name="l00084"></a>00084 <span class="comment">!  write(logu,*) &quot;Update PRIMS=&quot;, nicetoc(mark1)</span>
<a name="l00085"></a>00085   
<a name="l00086"></a>00086   <span class="comment">! Done</span>
<a name="l00087"></a>00087   <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;&quot;</span>
<a name="l00088"></a>00088   <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,<span class="stringliteral">&#39;(a,a)&#39;</span>) <span class="stringliteral">&quot;&gt; Numerical integration completed in &quot;</span>, <a class="code" href="namespacetictoc.html#a442a0695f535a607445218030cec1fa0">nicetoc</a>(mark)
<a name="l00089"></a>00089 
<a name="l00090"></a>00090 <span class="keyword">end subroutine hydroSolver</span>
<a name="l00091"></a>00091 
<a name="l00092"></a>00092 <span class="comment">!===============================================================================</span>
<a name="l00093"></a>00093 <span class="comment"></span>
<a name="l00094"></a>00094 !&gt; @brief Obtains the simulation-wide numerical timestep
<a name="l00095"></a>00095 !&gt; @details Will compute all the relevant timesteps (hydrodynamical, cooling,
<a name="l00096"></a>00096 !! etc) and return the largest, modified by the CFL parameter
<a name="l00097"></a>00097 !&gt; @param dt_glob The global timestep
<a name="l00098"></a><a class="code" href="hydro_8f90.html#adc9b3deba845cc61b81e340c68225b02">00098</a> <span class="keyword">subroutine </span><a class="code" href="hydro_8f90.html#adc9b3deba845cc61b81e340c68225b02">getTimestep</a> (dt_glob)
<a name="l00099"></a>00099 
<a name="l00100"></a>00100   use <span class="keywordflow">parameters</span>
<a name="l00101"></a>00101   use <span class="keywordflow">globals</span>
<a name="l00102"></a>00102   <span class="keyword">implicit none</span>
<a name="l00103"></a>00103 
<a name="l00104"></a>00104   <span class="keywordtype">real</span>, <span class="keywordtype">intent(out)</span> :: dt_glob
<a name="l00105"></a>00105 
<a name="l00106"></a>00106   <span class="keywordtype">integer</span> :: nb, bID, i, j, k, ilev
<a name="l00107"></a>00107   <span class="keywordtype">real</span> :: cs, dt_hydro, dt_cool, dt_loc
<a name="l00108"></a>00108   <span class="keywordtype">integer</span> :: ierr
<a name="l00109"></a>00109 
<a name="l00110"></a>00110   dt_loc = 1.0e30
<a name="l00111"></a>00111   dt_glob = 1.0e30
<a name="l00112"></a>00112   dt_hydro = 1.0e30
<a name="l00113"></a>00113   dt_cool = 1.0e30
<a name="l00114"></a>00114 
<a name="l00115"></a>00115   <span class="keyword">do</span> nb=1,<a class="code" href="namespaceparameters.html#a2ff4da7d081da9191c0d66918bf6625b">nbMaxProc</a>
<a name="l00116"></a>00116     bID = <a class="code" href="namespaceglobals.html#adc845521f6ad2502bc19df43607224e0">localBlocks</a>(nb)
<a name="l00117"></a>00117     <span class="keyword">if</span> (bID.ne.-1) <span class="keyword">then</span>
<a name="l00118"></a>00118 
<a name="l00119"></a>00119       call <a class="code" href="admesh_8f90.html#a971d8fccc948f21cfb43c8b9dd2ade5a">meshlevel</a>(bID, ilev)
<a name="l00120"></a>00120 
<a name="l00121"></a>00121       <span class="keyword">do</span> i=1,<a class="code" href="namespaceparameters.html#ad032cf1de9e7d232d045a52ece9eae4b">ncells_x</a>
<a name="l00122"></a>00122         <span class="keyword">do</span> j=1,<a class="code" href="namespaceparameters.html#aa52d0561bd220fc5f155b7d1932d8f1d">ncells_y</a>
<a name="l00123"></a>00123           <span class="keyword">do</span> k=1,<a class="code" href="namespaceparameters.html#a568fe0267a053f4e31fc851dba5a1ede">ncells_z</a>
<a name="l00124"></a>00124 
<a name="l00125"></a>00125             <span class="comment">! Hydrodynamical timestep</span>
<a name="l00126"></a>00126             call <a class="code" href="hydro_8f90.html#ab728e619fabaa5339726a7506022fd49">sound </a>(<a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(nb,:,i,j,k),cs)
<a name="l00127"></a>00127             dt_hydro = min( dt_hydro, &amp;
<a name="l00128"></a>00128               <a class="code" href="namespaceglobals.html#a4b0c55fb2db0260908cd128c2a6f762f">dx</a>(ilev)/(abs(<a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(nb,2,i,j,k))+cs), &amp;
<a name="l00129"></a>00129               <a class="code" href="namespaceglobals.html#a75a803e9fb814f0f532f09795c31948f">dy</a>(ilev)/(abs(<a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(nb,3,i,j,k))+cs), &amp;
<a name="l00130"></a>00130               <a class="code" href="namespaceglobals.html#a359c03a4b72ff3ab06d5fe9fbc810f9a">dz</a>(ilev)/(abs(<a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(nb,4,i,j,k))+cs) )
<a name="l00131"></a>00131 
<a name="l00132"></a>00132             <span class="comment">! Cooling timestep - if cooling enabled</span>
<a name="l00133"></a>00133             <span class="comment">! TO DO</span>
<a name="l00134"></a>00134       
<a name="l00135"></a>00135           <span class="keyword">end do</span>
<a name="l00136"></a>00136         <span class="keyword">end do</span>
<a name="l00137"></a>00137       <span class="keyword">end do</span>
<a name="l00138"></a>00138 
<a name="l00139"></a>00139     <span class="keyword">end if</span>
<a name="l00140"></a>00140   <span class="keyword">end do</span>
<a name="l00141"></a>00141 
<a name="l00142"></a>00142   <span class="comment">! Limit the timestep (optional)</span>
<a name="l00143"></a>00143   <span class="keyword">if</span> (cooling_type.eq.COOL_NONE) <span class="keyword">then</span>
<a name="l00144"></a>00144     dt_loc = dt_hydro*CFL
<a name="l00145"></a>00145   <span class="keyword">else</span>
<a name="l00146"></a>00146     dt_loc = min( dt_hydro, dt_cool ) * CFL
<a name="l00147"></a>00147   <span class="keyword">end if</span>
<a name="l00148"></a>00148 
<a name="l00149"></a>00149 <span class="preprocessor">#ifdef MPIP</span>
<a name="l00150"></a>00150   <span class="comment">! Obtain the global minimum timestep through MPI</span>
<a name="l00151"></a>00151   call MPI_ALLREDUCE(dt_loc, dt_glob, 1, mpi_real_kind, mpi_min, mpi_comm_world, ierr)
<a name="l00152"></a>00152 <span class="preprocessor">#else</span>
<a name="l00153"></a>00153   dt_glob = dt_loc
<a name="l00154"></a>00154 <span class="preprocessor">#endif</span>
<a name="l00155"></a>00155 
<a name="l00156"></a>00156   return
<a name="l00157"></a>00157 
<a name="l00158"></a>00158 <span class="keyword">end subroutine getTimestep</span>
<a name="l00159"></a>00159 
<a name="l00160"></a>00160 <span class="comment">!===============================================================================</span>
<a name="l00161"></a>00161 <span class="comment"></span>
<a name="l00162"></a>00162 !&gt; @brief Advances simulation by one timestep
<a name="l00163"></a><a class="code" href="hydro_8f90.html#a2540d0d208baf158ad6ab311e76a88b6">00163</a> <span class="keyword">subroutine </span><a class="code" href="hydro_8f90.html#a2540d0d208baf158ad6ab311e76a88b6">doStep</a> ()
<a name="l00164"></a>00164 
<a name="l00165"></a>00165   use <span class="keywordflow">parameters</span>
<a name="l00166"></a>00166   use <span class="keywordflow">globals</span>
<a name="l00167"></a>00167   <span class="keyword">implicit none</span>
<a name="l00168"></a>00168 
<a name="l00169"></a>00169   <span class="keywordtype">integer</span> :: nb, bID, i, j, k
<a name="l00170"></a>00170 
<a name="l00171"></a>00171   <a class="code" href="namespaceglobals.html#acc5c9a03b08561f9eeb530eb65221dbb">time</a> = <a class="code" href="namespaceglobals.html#acc5c9a03b08561f9eeb530eb65221dbb">time</a> + <a class="code" href="namespaceglobals.html#aa3ddc705be99dfda363bf5e2850d075e">dt</a>
<a name="l00172"></a>00172   <a class="code" href="namespaceglobals.html#ae77d5245dcabc5420d4a5d404ae8d485">it</a> = <a class="code" href="namespaceglobals.html#ae77d5245dcabc5420d4a5d404ae8d485">it</a> + 1
<a name="l00173"></a>00173  
<a name="l00174"></a>00174   <span class="keyword">do</span> nb=1,<a class="code" href="namespaceparameters.html#a2ff4da7d081da9191c0d66918bf6625b">nbMaxProc</a>
<a name="l00175"></a>00175     bID = <a class="code" href="namespaceglobals.html#adc845521f6ad2502bc19df43607224e0">localBlocks</a>(nb)
<a name="l00176"></a>00176     <span class="keyword">if</span> (bID.ne.-1) <span class="keyword">then</span>
<a name="l00177"></a>00177 
<a name="l00178"></a>00178       <span class="keyword">do</span> i=1,<a class="code" href="namespaceparameters.html#ad032cf1de9e7d232d045a52ece9eae4b">ncells_x</a>
<a name="l00179"></a>00179         <span class="keyword">do</span> j=1,<a class="code" href="namespaceparameters.html#aa52d0561bd220fc5f155b7d1932d8f1d">ncells_y</a>
<a name="l00180"></a>00180           <span class="keyword">do</span> k=1,<a class="code" href="namespaceparameters.html#a568fe0267a053f4e31fc851dba5a1ede">ncells_z</a>          
<a name="l00181"></a>00181             <a class="code" href="namespaceglobals.html#a582706020cbc63411a5564cc9a01436f">U</a>(nb,:,i,j,k) = <a class="code" href="namespaceglobals.html#a0650c733701f715a885795fef73e173f">UP</a>(nb,:,i,j,k)
<a name="l00182"></a>00182           <span class="keyword">end do</span>
<a name="l00183"></a>00183         <span class="keyword">end do</span>
<a name="l00184"></a>00184       <span class="keyword">end do</span>
<a name="l00185"></a>00185 
<a name="l00186"></a>00186     <span class="keyword">end if</span>
<a name="l00187"></a>00187   <span class="keyword">end do</span>
<a name="l00188"></a>00188   
<a name="l00189"></a>00189 <span class="keyword">end subroutine doStep</span>
<a name="l00190"></a>00190 
<a name="l00191"></a>00191 <span class="comment">!===============================================================================</span>
<a name="l00192"></a>00192 <span class="comment"></span>
<a name="l00193"></a>00193 !&gt; @brief First order Lax-Friefrichs scheme
<a name="l00194"></a><a class="code" href="hydro_8f90.html#aeb1082eef0fc6de15e26f8417018f7a7">00194</a> <span class="keyword">subroutine </span><a class="code" href="hydro_8f90.html#aeb1082eef0fc6de15e26f8417018f7a7">LaxFriedrichs</a> ()
<a name="l00195"></a>00195 
<a name="l00196"></a>00196   use <span class="keywordflow">parameters</span>
<a name="l00197"></a>00197   use <span class="keywordflow">globals</span>
<a name="l00198"></a>00198   use <span class="keywordflow">tictoc</span>
<a name="l00199"></a>00199   <span class="keyword">implicit none</span>
<a name="l00200"></a>00200 
<a name="l00201"></a>00201   <span class="keywordtype">integer</span> :: nb, bID, lev, i, j, k
<a name="l00202"></a>00202   <span class="keywordtype">integer</span> :: mark, mark1, mark2
<a name="l00203"></a>00203   <span class="keywordtype">real</span> :: pvars(neqtot)
<a name="l00204"></a>00204   <span class="keywordtype">logical</span> :: valid  <span class="comment">! DEBUG</span>
<a name="l00205"></a>00205 
<a name="l00206"></a>00206   <span class="comment">! Exchange boundaries to fill ghost cells (all blocks)</span>
<a name="l00207"></a>00207   call <a class="code" href="boundary_8f90.html#a236deccc2a5c9c38ddf48adf49e5a60a">boundary </a>(1, <a class="code" href="namespaceglobals.html#a582706020cbc63411a5564cc9a01436f">U</a>)
<a name="l00208"></a>00208 
<a name="l00209"></a>00209   <span class="comment">! DEBUG DEBUG</span>
<a name="l00210"></a>00210   <span class="comment">! TO BE MADE MORE EFFICIENT LATER - it&#39;s not necessary to recalculate</span>
<a name="l00211"></a>00211   <span class="comment">! primitives *everywhere*, only in ghost cells</span>
<a name="l00212"></a>00212   call <a class="code" href="prims_8f90.html#a3bcf566b4de47ff3e1e7b6aeffba67a1">updatePrims </a>(<a class="code" href="namespaceglobals.html#a582706020cbc63411a5564cc9a01436f">U</a>, <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>)
<a name="l00213"></a>00213 
<a name="l00214"></a>00214   <span class="comment">! Integrate all local blocks</span>
<a name="l00215"></a>00215   <span class="keyword">do</span> nb=1,<a class="code" href="namespaceparameters.html#a2ff4da7d081da9191c0d66918bf6625b">nbMaxProc</a>
<a name="l00216"></a>00216     bID = <a class="code" href="namespaceglobals.html#adc845521f6ad2502bc19df43607224e0">localBlocks</a>(nb)
<a name="l00217"></a>00217     <span class="keyword">if</span> (bID.ne.-1) <span class="keyword">then</span>
<a name="l00218"></a>00218 
<a name="l00219"></a>00219       call <a class="code" href="namespacetictoc.html#ab092f042aab35f2f6928c7b2f073b116">tic </a>(mark)
<a name="l00220"></a>00220 
<a name="l00221"></a>00221       <span class="comment">! Compute physical fluxes for all physical cells, plus one additional</span>
<a name="l00222"></a>00222       <span class="comment">! ghost cell to each side</span>
<a name="l00223"></a>00223       <span class="keyword">do</span> i=0,<a class="code" href="namespaceparameters.html#ad032cf1de9e7d232d045a52ece9eae4b">ncells_x</a>+1
<a name="l00224"></a>00224         <span class="keyword">do</span> j=0,<a class="code" href="namespaceparameters.html#aa52d0561bd220fc5f155b7d1932d8f1d">ncells_y</a>+1
<a name="l00225"></a>00225           <span class="keyword">do</span> k=0,<a class="code" href="namespaceparameters.html#a568fe0267a053f4e31fc851dba5a1ede">ncells_z</a>+1
<a name="l00226"></a>00226             pvars(:) = <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(nb,:,i,j,k)
<a name="l00227"></a>00227             call <a class="code" href="prims_8f90.html#abb5b0c98fe52086f4a769f16ffba7155">prim2fluxes </a>(pvars, DIM_X, <a class="code" href="namespaceglobals.html#a4e6a7d8290b051603459d790f8fe1ff0">F</a>(:,i,j,k))
<a name="l00228"></a>00228             call <a class="code" href="prims_8f90.html#abb5b0c98fe52086f4a769f16ffba7155">prim2fluxes </a>(pvars, DIM_Y, <a class="code" href="namespaceglobals.html#ac76da4c3e110bb9229148d2cdb5ab287">G</a>(:,i,j,k))
<a name="l00229"></a>00229             call <a class="code" href="prims_8f90.html#abb5b0c98fe52086f4a769f16ffba7155">prim2fluxes </a>(pvars, DIM_Z, <a class="code" href="namespaceglobals.html#a94ffae17d97d942c7b75bee9ae0623d2">H</a>(:,i,j,k))
<a name="l00230"></a>00230           <span class="keyword">end do</span>
<a name="l00231"></a>00231         <span class="keyword">end do</span>
<a name="l00232"></a>00232       <span class="keyword">end do</span>
<a name="l00233"></a>00233 
<a name="l00234"></a>00234       <span class="comment">! Compute UPs using Lax-Friedrich&#39;s upwind scheme</span>
<a name="l00235"></a>00235       call <a class="code" href="admesh_8f90.html#a971d8fccc948f21cfb43c8b9dd2ade5a">meshlevel </a>(bID,lev)
<a name="l00236"></a>00236       <span class="keyword">do</span> i=1,<a class="code" href="namespaceparameters.html#ad032cf1de9e7d232d045a52ece9eae4b">ncells_x</a>
<a name="l00237"></a>00237         <span class="keyword">do</span> j=1,<a class="code" href="namespaceparameters.html#aa52d0561bd220fc5f155b7d1932d8f1d">ncells_y</a>
<a name="l00238"></a>00238           <span class="keyword">do</span> k=1,<a class="code" href="namespaceparameters.html#a568fe0267a053f4e31fc851dba5a1ede">ncells_z</a>
<a name="l00239"></a>00239             <a class="code" href="namespaceglobals.html#a0650c733701f715a885795fef73e173f">UP</a>(nb,:,i,j,k) = &amp;
<a name="l00240"></a>00240               ( <a class="code" href="namespaceglobals.html#a582706020cbc63411a5564cc9a01436f">U</a>(nb,:,i+1,j,k) + <a class="code" href="namespaceglobals.html#a582706020cbc63411a5564cc9a01436f">U</a>(nb,:,i-1,j,k) &amp;
<a name="l00241"></a>00241               + <a class="code" href="namespaceglobals.html#a582706020cbc63411a5564cc9a01436f">U</a>(nb,:,i,j+1,k) + <a class="code" href="namespaceglobals.html#a582706020cbc63411a5564cc9a01436f">U</a>(nb,:,i,j-1,k) &amp;
<a name="l00242"></a>00242               + <a class="code" href="namespaceglobals.html#a582706020cbc63411a5564cc9a01436f">U</a>(nb,:,i,j,k+1) + <a class="code" href="namespaceglobals.html#a582706020cbc63411a5564cc9a01436f">U</a>(nb,:,i,j,k-1) ) / 6.0 &amp;
<a name="l00243"></a>00243               - 0.5*<a class="code" href="namespaceglobals.html#aa3ddc705be99dfda363bf5e2850d075e">dt</a>/<a class="code" href="namespaceglobals.html#a4b0c55fb2db0260908cd128c2a6f762f">dx</a>(lev)*(<a class="code" href="namespaceglobals.html#a4e6a7d8290b051603459d790f8fe1ff0">F</a>(:,i+1,j,k)-<a class="code" href="namespaceglobals.html#a4e6a7d8290b051603459d790f8fe1ff0">F</a>(:,i-1,j,k)) &amp;
<a name="l00244"></a>00244               - 0.5*<a class="code" href="namespaceglobals.html#aa3ddc705be99dfda363bf5e2850d075e">dt</a>/<a class="code" href="namespaceglobals.html#a75a803e9fb814f0f532f09795c31948f">dy</a>(lev)*(<a class="code" href="namespaceglobals.html#ac76da4c3e110bb9229148d2cdb5ab287">G</a>(:,i,j+1,k)-<a class="code" href="namespaceglobals.html#ac76da4c3e110bb9229148d2cdb5ab287">G</a>(:,i,j-1,k)) &amp;
<a name="l00245"></a>00245               - 0.5*<a class="code" href="namespaceglobals.html#aa3ddc705be99dfda363bf5e2850d075e">dt</a>/<a class="code" href="namespaceglobals.html#a359c03a4b72ff3ab06d5fe9fbc810f9a">dz</a>(lev)*(<a class="code" href="namespaceglobals.html#a94ffae17d97d942c7b75bee9ae0623d2">H</a>(:,i,j,k+1)-<a class="code" href="namespaceglobals.html#a94ffae17d97d942c7b75bee9ae0623d2">H</a>(:,i,j,k-1))
<a name="l00246"></a>00246           <span class="keyword">end do</span>
<a name="l00247"></a>00247         <span class="keyword">end do</span>
<a name="l00248"></a>00248       <span class="keyword">end do</span>
<a name="l00249"></a>00249       
<a name="l00250"></a>00250 <span class="comment">!      write(logu,*) &quot;Integrated block&quot;, bID, &quot;in&quot;, nicetoc(mark) </span>
<a name="l00251"></a>00251 
<a name="l00252"></a>00252     <span class="keyword">end if</span>     
<a name="l00253"></a>00253   <span class="keyword">end do</span>
<a name="l00254"></a>00254 
<a name="l00255"></a>00255 <span class="keyword">end subroutine LaxFriedrichs</span>
<a name="l00256"></a>00256 
<a name="l00257"></a>00257 <span class="comment">!===============================================================================</span>
<a name="l00258"></a>00258 <span class="comment"></span>
<a name="l00259"></a>00259 !&gt; @brief Harten, Lax, van Leer (HLL) Approximate Riemann Solver
<a name="l00260"></a>00260 !&gt; @details Computes intercell numerical fluxes using the HLL Riemann Solver
<a name="l00261"></a>00261 !! and advances the flow variables one timestep. The solver can be set to be
<a name="l00262"></a>00262 !! first or second order in space and time.
<a name="l00263"></a><a class="code" href="hydro_8f90.html#a14aa08225afe7e78232a70faed8ad223">00263</a> <span class="keyword">subroutine </span><a class="code" href="hydro_8f90.html#a14aa08225afe7e78232a70faed8ad223">HLL</a> (order)
<a name="l00264"></a>00264 
<a name="l00265"></a>00265   use <span class="keywordflow">parameters</span>
<a name="l00266"></a>00266   use <span class="keywordflow">globals</span>
<a name="l00267"></a>00267   use <span class="keywordflow">tictoc</span>
<a name="l00268"></a>00268   <span class="keyword">implicit none</span>
<a name="l00269"></a>00269 
<a name="l00270"></a>00270   <span class="keywordtype">integer</span>, <span class="keywordtype">intent(in)</span> :: order
<a name="l00271"></a>00271 
<a name="l00272"></a>00272   <span class="keywordtype">integer</span> :: bIndx, bID, mark, bcount
<a name="l00273"></a>00273   <span class="keywordtype">real</span> :: dtp
<a name="l00274"></a>00274 
<a name="l00275"></a>00275   <span class="comment">! -----------------------------------</span>
<a name="l00276"></a>00276   <span class="comment">! 1st-order timestep</span>
<a name="l00277"></a>00277 
<a name="l00278"></a>00278   <span class="comment">! Halve timestep for first part of second-order HLL</span>
<a name="l00279"></a>00279   <span class="keyword">if</span> (order.eq.2) <span class="keyword">then</span>
<a name="l00280"></a>00280     dtp = <a class="code" href="namespaceglobals.html#aa3ddc705be99dfda363bf5e2850d075e">dt</a>/2.0
<a name="l00281"></a>00281   <span class="keyword">else</span> 
<a name="l00282"></a>00282     dtp = <a class="code" href="namespaceglobals.html#aa3ddc705be99dfda363bf5e2850d075e">dt</a>
<a name="l00283"></a>00283   <span class="keyword">end if</span>
<a name="l00284"></a>00284 
<a name="l00285"></a>00285   <span class="comment">! Exchange 1-deep boundaries to fill ghost cells (all blocks)</span>
<a name="l00286"></a>00286   call <a class="code" href="namespacetictoc.html#ab092f042aab35f2f6928c7b2f073b116">tic</a>(mark)
<a name="l00287"></a>00287   <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;&quot;</span>
<a name="l00288"></a>00288   <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,<span class="stringliteral">&#39;(1x,a)&#39;</span>) <span class="stringliteral">&quot;&gt; Exchanging 1-deep boundary layers ...&quot;</span>
<a name="l00289"></a>00289   call <a class="code" href="boundary_8f90.html#a236deccc2a5c9c38ddf48adf49e5a60a">boundary </a>(1, <a class="code" href="namespaceglobals.html#a582706020cbc63411a5564cc9a01436f">U</a>)
<a name="l00290"></a>00290   <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;Boundaries exchanged in&quot;</span>, <a class="code" href="namespacetictoc.html#a442a0695f535a607445218030cec1fa0">nicetoc</a>(mark)
<a name="l00291"></a>00291 
<a name="l00292"></a>00292   <span class="comment">! TODO: it&#39;s not necessary to recalculate primitives *everywhere*,</span>
<a name="l00293"></a>00293   <span class="comment">! only in ghost cells!</span>
<a name="l00294"></a>00294   call <a class="code" href="prims_8f90.html#a3bcf566b4de47ff3e1e7b6aeffba67a1">updatePrims </a>(<a class="code" href="namespaceglobals.html#a582706020cbc63411a5564cc9a01436f">U</a>, <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>)
<a name="l00295"></a>00295 
<a name="l00296"></a>00296   <span class="comment">! First-order integration of all local blocks</span>
<a name="l00297"></a>00297   bcount = 0
<a name="l00298"></a>00298   call <a class="code" href="namespacetictoc.html#ab092f042aab35f2f6928c7b2f073b116">tic</a>(mark)
<a name="l00299"></a>00299   <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;&quot;</span>
<a name="l00300"></a>00300   <span class="keyword">if</span> (order.eq.1) <span class="keyword">then</span>
<a name="l00301"></a>00301     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,<span class="stringliteral">&#39;(1x,a)&#39;</span>) <span class="stringliteral">&quot;&gt; Integrating blocks ...&quot;</span>
<a name="l00302"></a>00302   <span class="keyword">else</span> <span class="keyword">if</span> (order.eq.2) <span class="keyword">then</span>
<a name="l00303"></a>00303     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,<span class="stringliteral">&#39;(1x,a)&#39;</span>) <span class="stringliteral">&quot;&gt; Integrating blocks (1st order half step) ...&quot;</span>
<a name="l00304"></a>00304   <span class="keyword">end if</span>
<a name="l00305"></a>00305   <span class="keyword">do</span> bIndx=1,<a class="code" href="namespaceparameters.html#a2ff4da7d081da9191c0d66918bf6625b">nbMaxProc</a>
<a name="l00306"></a>00306     bID = <a class="code" href="namespaceglobals.html#adc845521f6ad2502bc19df43607224e0">localBlocks</a>(bIndx)
<a name="l00307"></a>00307     <span class="keyword">if</span> (bID.ne.-1) <span class="keyword">then</span>
<a name="l00308"></a>00308     
<a name="l00309"></a>00309       <span class="comment">! Obtain HLL numerical fluxes</span>
<a name="l00310"></a>00310       call <a class="code" href="hydro_8f90.html#a4ed254b806b31024afc994fe9e1a7a0d">HLLfluxes </a>(bIndx, 1)
<a name="l00311"></a>00311 
<a name="l00312"></a>00312       <span class="comment">! Apply conservative formula</span>
<a name="l00313"></a>00313       call <a class="code" href="hydro_8f90.html#ae9c6c604c05a7aa9efa21850fa20cdf3">HLLstep </a>(bIndx, dtp)
<a name="l00314"></a>00314       
<a name="l00315"></a>00315 <span class="comment">!      write(logu,&#39;(1x,a,i7,a,a)&#39;) &quot;Integrated block &quot;, bID, &quot; in&quot;, nicetoc(mark)</span>
<a name="l00316"></a>00316 
<a name="l00317"></a>00317       bcount = bcount + 1      
<a name="l00318"></a>00318 
<a name="l00319"></a>00319     <span class="keyword">end if</span>
<a name="l00320"></a>00320   <span class="keyword">end do</span>
<a name="l00321"></a>00321 
<a name="l00322"></a>00322   <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,<span class="stringliteral">&#39;(1x,a,i0,a,a)&#39;</span>) <span class="stringliteral">&quot;Integrated &quot;</span>, bcount, <span class="stringliteral">&quot; blocks in &quot;</span>, <a class="code" href="namespacetictoc.html#a442a0695f535a607445218030cec1fa0">nicetoc</a>(mark)
<a name="l00323"></a>00323 
<a name="l00324"></a>00324   <span class="comment">! -----------------------------------</span>
<a name="l00325"></a>00325   <span class="comment">! 2nd-order full timestep (skipped in 1st-order HLL)</span>
<a name="l00326"></a>00326 
<a name="l00327"></a>00327   <span class="keyword">if</span> (order.eq.2) <span class="keyword">then</span>
<a name="l00328"></a>00328 
<a name="l00329"></a>00329     <span class="comment">! Exchange 2-deep boundaries to fill ghost cells (all blocks)</span>
<a name="l00330"></a>00330     call <a class="code" href="namespacetictoc.html#ab092f042aab35f2f6928c7b2f073b116">tic</a>(mark)
<a name="l00331"></a>00331     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;&quot;</span>
<a name="l00332"></a>00332     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,<span class="stringliteral">&#39;(1x,a)&#39;</span>) <span class="stringliteral">&quot;&gt; Exchanging 2-deep boundary layers ...&quot;</span>
<a name="l00333"></a>00333     call <a class="code" href="boundary_8f90.html#a236deccc2a5c9c38ddf48adf49e5a60a">boundary </a>(2, <a class="code" href="namespaceglobals.html#a0650c733701f715a885795fef73e173f">UP</a>)
<a name="l00334"></a>00334     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;Boundaries exchanged in&quot;</span>, <a class="code" href="namespacetictoc.html#a442a0695f535a607445218030cec1fa0">nicetoc</a>(mark)
<a name="l00335"></a>00335 
<a name="l00336"></a>00336     <span class="comment">! TODO: it&#39;s not necessary to recalculate primitives *everywhere*,</span>
<a name="l00337"></a>00337     <span class="comment">! only in ghost cells!</span>
<a name="l00338"></a>00338     call <a class="code" href="prims_8f90.html#a3bcf566b4de47ff3e1e7b6aeffba67a1">updatePrims </a>(<a class="code" href="namespaceglobals.html#a0650c733701f715a885795fef73e173f">UP</a>, <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>)
<a name="l00339"></a>00339 
<a name="l00340"></a>00340     <span class="comment">! Second-order integration of all local blocks</span>
<a name="l00341"></a>00341     bcount = 0
<a name="l00342"></a>00342     call <a class="code" href="namespacetictoc.html#ab092f042aab35f2f6928c7b2f073b116">tic</a>(mark)
<a name="l00343"></a>00343     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,*) <span class="stringliteral">&quot;&quot;</span>
<a name="l00344"></a>00344     <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,<span class="stringliteral">&#39;(1x,a)&#39;</span>) <span class="stringliteral">&quot;&gt; Integrating blocks (2nd order full step) ...&quot;</span>
<a name="l00345"></a>00345     <span class="keyword">do</span> bIndx=1,<a class="code" href="namespaceparameters.html#a2ff4da7d081da9191c0d66918bf6625b">nbMaxProc</a>
<a name="l00346"></a>00346       bID = <a class="code" href="namespaceglobals.html#adc845521f6ad2502bc19df43607224e0">localBlocks</a>(bIndx)
<a name="l00347"></a>00347       <span class="keyword">if</span> (bID.ne.-1) <span class="keyword">then</span>
<a name="l00348"></a>00348       
<a name="l00349"></a>00349         <span class="comment">! Obtain HLL numerical fluxes</span>
<a name="l00350"></a>00350         call <a class="code" href="hydro_8f90.html#a4ed254b806b31024afc994fe9e1a7a0d">HLLfluxes </a>(bIndx, 2)
<a name="l00351"></a>00351 
<a name="l00352"></a>00352         <span class="comment">! Apply conservative formula</span>
<a name="l00353"></a>00353         call <a class="code" href="hydro_8f90.html#ae9c6c604c05a7aa9efa21850fa20cdf3">HLLstep </a>(bIndx, dtp)
<a name="l00354"></a>00354 
<a name="l00355"></a>00355         <span class="comment">! Apply numerical viscosity</span>
<a name="l00356"></a>00356         call <a class="code" href="hydro_8f90.html#a2db2c449b150c852b8075be76c27a90e">viscosity </a>(bIndx, <a class="code" href="namespaceglobals.html#a582706020cbc63411a5564cc9a01436f">U</a>, <a class="code" href="namespaceglobals.html#a0650c733701f715a885795fef73e173f">UP</a>)
<a name="l00357"></a>00357         
<a name="l00358"></a>00358 <span class="comment">!        write(logu,&#39;(1x,a,i7,a,a)&#39;) &quot;Integrated block &quot;, bID, &quot; in&quot;, nicetoc(mark)</span>
<a name="l00359"></a>00359         
<a name="l00360"></a>00360       bcount = bcount + 1      
<a name="l00361"></a>00361 
<a name="l00362"></a>00362       <span class="keyword">end if</span>
<a name="l00363"></a>00363     <span class="keyword">end do</span>
<a name="l00364"></a>00364 
<a name="l00365"></a>00365   <span class="keyword">write</span>(<a class="code" href="namespaceglobals.html#a5baaf3368c41942a3e5e48a39b97c2ce">logu</a>,<span class="stringliteral">&#39;(1x,a,i0,a,a)&#39;</span>) <span class="stringliteral">&quot;Integrated &quot;</span>, bcount, <span class="stringliteral">&quot; blocks in &quot;</span>, <a class="code" href="namespacetictoc.html#a442a0695f535a607445218030cec1fa0">nicetoc</a>(mark)
<a name="l00366"></a>00366   
<a name="l00367"></a>00367   <span class="keyword">end if</span>
<a name="l00368"></a>00368 
<a name="l00369"></a>00369 <span class="keyword">end subroutine HLL</span>
<a name="l00370"></a>00370 
<a name="l00371"></a>00371 <span class="comment">!===============================================================================</span>
<a name="l00372"></a>00372 <span class="comment"></span>
<a name="l00373"></a>00373 !&gt; @brief Harten, Lax, van Leer (HLL) Approximate Riemann Solver
<a name="l00374"></a>00374 !&gt; @details Computes the intercell numerical fluxes for every cell interface
<a name="l00375"></a>00375 !! in a block using the HLL solver. This routine assumes the global vector of
<a name="l00376"></a>00376 !! primitives is up-to-date (including enough ghost cells) and exits with
<a name="l00377"></a>00377 !! computed values in the intercell numerical fluxes (FC, GC, HC). Interfaces
<a name="l00378"></a>00378 !! are define to the right, that is:
<a name="l00379"></a>00379 !! FC(:,i,j,k): intercell flux between cell (i,j,k) and cell (i+1,j,k)
<a name="l00380"></a>00380 !! GC(:,i,j,k): intercell flux between cell (i,j,k) and cell (i,j+1,k)
<a name="l00381"></a>00381 !! HC(:,i,j,k): intercell flux between cell (i,j,k) and cell (i,j,k+1)
<a name="l00382"></a>00382 !! The order of the solver must be specified. First-order employs piece-wise
<a name="l00383"></a>00383 !! constant primitives in each cell, while second-ordr uses linear
<a name="l00384"></a>00384 !! reconstruction to interpolate the primitives at cell interfaces.
<a name="l00385"></a>00385 !&gt; @param locIndx Local index of the block
<a name="l00386"></a>00386 !&gt; @param order Order of solver (interpolation for primitives)
<a name="l00387"></a><a class="code" href="hydro_8f90.html#a4ed254b806b31024afc994fe9e1a7a0d">00387</a> <span class="keyword">subroutine </span><a class="code" href="hydro_8f90.html#a4ed254b806b31024afc994fe9e1a7a0d">HLLfluxes</a> (locIndx, order)
<a name="l00388"></a>00388 
<a name="l00389"></a>00389   use <span class="keywordflow">parameters</span>
<a name="l00390"></a>00390   use <span class="keywordflow">globals</span>
<a name="l00391"></a>00391   <span class="keyword">implicit none</span>
<a name="l00392"></a>00392 
<a name="l00393"></a>00393   <span class="keywordtype">integer</span>, <span class="keywordtype">intent(in)</span> :: locIndx
<a name="l00394"></a>00394   <span class="keywordtype">integer</span>, <span class="keywordtype">intent(in)</span> :: order
<a name="l00395"></a>00395   
<a name="l00396"></a>00396   <span class="keywordtype">integer</span> :: i, j, k
<a name="l00397"></a>00397   <span class="keywordtype">real</span> :: pl(neqtot), pr(neqtot), pll(neqtot), prr(neqtot), ff(neqtot)
<a name="l00398"></a>00398   <span class="keywordtype">logical</span> :: valid
<a name="l00399"></a>00399 
<a name="l00400"></a>00400   <span class="comment">! First-order method</span>
<a name="l00401"></a>00401   <span class="keyword">select</span> <span class="keyword">case</span> (order)
<a name="l00402"></a>00402 
<a name="l00403"></a>00403   <span class="comment">! -------------------------------------------</span>
<a name="l00404"></a>00404 
<a name="l00405"></a>00405   <span class="keyword">case</span> (1)   <span class="comment">! First-order</span>
<a name="l00406"></a>00406   
<a name="l00407"></a>00407     <span class="keyword">do</span> i=0,<a class="code" href="namespaceparameters.html#ad032cf1de9e7d232d045a52ece9eae4b">ncells_x</a>
<a name="l00408"></a>00408       <span class="keyword">do</span> j=0,<a class="code" href="namespaceparameters.html#aa52d0561bd220fc5f155b7d1932d8f1d">ncells_y</a>
<a name="l00409"></a>00409         <span class="keyword">do</span> k=0,<a class="code" href="namespaceparameters.html#a568fe0267a053f4e31fc851dba5a1ede">ncells_z</a>
<a name="l00410"></a>00410 
<a name="l00411"></a>00411           call <a class="code" href="admesh_8f90.html#a65c3f5a6ddbc9bc13aa5ca47284166cd">validCell </a>(i,j,k,valid)
<a name="l00412"></a>00412           <span class="keyword">if</span> (valid) <span class="keyword">then</span>
<a name="l00413"></a>00413 
<a name="l00414"></a>00414             <span class="comment">! X dimension</span>
<a name="l00415"></a>00415             pl(:) = <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(locIndx,:,i,j,k)
<a name="l00416"></a>00416             pr(:) = <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(locIndx,:,i+1,j,k)
<a name="l00417"></a>00417             call <a class="code" href="hydro_8f90.html#af3975a7bd827e308de535d90f078ac97">primfhll </a>(pL, pR, ff)
<a name="l00418"></a>00418             <a class="code" href="namespaceglobals.html#a96cf4e9b9fa4b62fbc27e80e5655daa7">FC</a>(:,i,j,k) = ff(:)
<a name="l00419"></a>00419 
<a name="l00420"></a>00420             <span class="comment">! Y dimension</span>
<a name="l00421"></a>00421             pL(:) = <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(locIndx,:,i,j,k)
<a name="l00422"></a>00422             pR(:) = <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(locIndx,:,i,j+1,k)
<a name="l00423"></a>00423             call <a class="code" href="prims_8f90.html#ab943f29f1385451fbef5c1809312bece">swapxy </a>(pL)
<a name="l00424"></a>00424             call <a class="code" href="prims_8f90.html#ab943f29f1385451fbef5c1809312bece">swapxy </a>(pR)
<a name="l00425"></a>00425             call <a class="code" href="hydro_8f90.html#af3975a7bd827e308de535d90f078ac97">primfhll</a>(pL, pR, ff)
<a name="l00426"></a>00426             call <a class="code" href="prims_8f90.html#ab943f29f1385451fbef5c1809312bece">swapxy </a>(ff)
<a name="l00427"></a>00427             <a class="code" href="namespaceglobals.html#a9325919e4ee2cb149132c8730d4a7817">GC</a>(:,i,j,k) = ff(:)
<a name="l00428"></a>00428 
<a name="l00429"></a>00429             <span class="comment">! Z dimension</span>
<a name="l00430"></a>00430             pL(:) = <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(locIndx,:,i,j,k)
<a name="l00431"></a>00431             pR(:) = <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(locIndx,:,i,j,k+1)
<a name="l00432"></a>00432             call <a class="code" href="prims_8f90.html#a81acf562c7962cb3c8b6729a3c65d8ba">swapxz </a>(pL)
<a name="l00433"></a>00433             call <a class="code" href="prims_8f90.html#a81acf562c7962cb3c8b6729a3c65d8ba">swapxz </a>(pR)
<a name="l00434"></a>00434             call <a class="code" href="hydro_8f90.html#af3975a7bd827e308de535d90f078ac97">primfhll</a>(pL, pR, ff)
<a name="l00435"></a>00435             call <a class="code" href="prims_8f90.html#a81acf562c7962cb3c8b6729a3c65d8ba">swapxz </a>(ff)
<a name="l00436"></a>00436             <a class="code" href="namespaceglobals.html#a3e3e97adbac97c483d8795af6556225e">HC</a>(:,i,j,k) = ff(:)
<a name="l00437"></a>00437          
<a name="l00438"></a>00438           <span class="keyword">end if</span>
<a name="l00439"></a>00439           
<a name="l00440"></a>00440         <span class="keyword">end do</span>
<a name="l00441"></a>00441       <span class="keyword">end do</span>
<a name="l00442"></a>00442     <span class="keyword">end do</span>
<a name="l00443"></a>00443 
<a name="l00444"></a>00444   <span class="comment">! -------------------------------------------</span>
<a name="l00445"></a>00445 
<a name="l00446"></a>00446   <span class="keyword">case</span> (2)  <span class="comment">! Second-order - requires limiter</span>
<a name="l00447"></a>00447 
<a name="l00448"></a>00448     <span class="keyword">do</span> i=0,<a class="code" href="namespaceparameters.html#ad032cf1de9e7d232d045a52ece9eae4b">ncells_x</a>
<a name="l00449"></a>00449       <span class="keyword">do</span> j=0,<a class="code" href="namespaceparameters.html#aa52d0561bd220fc5f155b7d1932d8f1d">ncells_y</a>
<a name="l00450"></a>00450         <span class="keyword">do</span> k=0,<a class="code" href="namespaceparameters.html#a568fe0267a053f4e31fc851dba5a1ede">ncells_z</a>
<a name="l00451"></a>00451 
<a name="l00452"></a>00452           call <a class="code" href="admesh_8f90.html#a65c3f5a6ddbc9bc13aa5ca47284166cd">validCell </a>(i,j,k,valid)
<a name="l00453"></a>00453           <span class="keyword">if</span> (valid) <span class="keyword">then</span>
<a name="l00454"></a>00454 
<a name="l00455"></a>00455             <span class="comment">! X dimension</span>
<a name="l00456"></a>00456             pll(:) = <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(locIndx,:,i-1,j,k)
<a name="l00457"></a>00457             pl(:)  = <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(locIndx,:,i,  j,k)
<a name="l00458"></a>00458             pr(:)  = <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(locIndx,:,i+1,j,k)
<a name="l00459"></a>00459             prr(:) = <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(locIndx,:,i+2,j,k)
<a name="l00460"></a>00460             call <a class="code" href="hydro_8f90.html#ad4300db9256018626c24a5498bd8e34c">limiter </a>(pll,pl,pr,prr,limiter_type,neqtot)
<a name="l00461"></a>00461             call <a class="code" href="hydro_8f90.html#af3975a7bd827e308de535d90f078ac97">primfhll </a>(pl, pr, ff)
<a name="l00462"></a>00462             <a class="code" href="namespaceglobals.html#a96cf4e9b9fa4b62fbc27e80e5655daa7">FC</a>(:,i,j,k) = ff(:)
<a name="l00463"></a>00463 
<a name="l00464"></a>00464             <span class="comment">! Y dimension</span>
<a name="l00465"></a>00465             pll(:) = <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(locIndx,:,i,j-1,k)
<a name="l00466"></a>00466             pl(:)  = <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(locIndx,:,i,j  ,k)
<a name="l00467"></a>00467             pr(:)  = <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(locIndx,:,i,j+1,k)
<a name="l00468"></a>00468             prr(:) = <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(locIndx,:,i,j+2,k)
<a name="l00469"></a>00469             call <a class="code" href="prims_8f90.html#ab943f29f1385451fbef5c1809312bece">swapxy </a>(pll)
<a name="l00470"></a>00470             call <a class="code" href="prims_8f90.html#ab943f29f1385451fbef5c1809312bece">swapxy </a>(pl)
<a name="l00471"></a>00471             call <a class="code" href="prims_8f90.html#ab943f29f1385451fbef5c1809312bece">swapxy </a>(pr)
<a name="l00472"></a>00472             call <a class="code" href="prims_8f90.html#ab943f29f1385451fbef5c1809312bece">swapxy </a>(prr)
<a name="l00473"></a>00473             call <a class="code" href="hydro_8f90.html#ad4300db9256018626c24a5498bd8e34c">limiter </a>(pll,pl,pr,prr,limiter_type,neqtot)
<a name="l00474"></a>00474             call <a class="code" href="hydro_8f90.html#af3975a7bd827e308de535d90f078ac97">primfhll</a>(pl, pr, ff)
<a name="l00475"></a>00475             call <a class="code" href="prims_8f90.html#ab943f29f1385451fbef5c1809312bece">swapxy </a>(ff)
<a name="l00476"></a>00476             <a class="code" href="namespaceglobals.html#a9325919e4ee2cb149132c8730d4a7817">GC</a>(:,i,j,k) = ff(:)
<a name="l00477"></a>00477 
<a name="l00478"></a>00478             <span class="comment">! Z dimension</span>
<a name="l00479"></a>00479             pll(:) = <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(locIndx,:,i,j,k-1)
<a name="l00480"></a>00480             pl(:)  = <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(locIndx,:,i,j,k  )
<a name="l00481"></a>00481             pr(:)  = <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(locIndx,:,i,j,k+1)
<a name="l00482"></a>00482             prr(:) = <a class="code" href="namespaceglobals.html#ad5c9c986cbddd54f206e26fdb9a8a6ad">PRIM</a>(locIndx,:,i,j,k+2)            
<a name="l00483"></a>00483             call <a class="code" href="prims_8f90.html#a81acf562c7962cb3c8b6729a3c65d8ba">swapxz </a>(pll)
<a name="l00484"></a>00484             call <a class="code" href="prims_8f90.html#a81acf562c7962cb3c8b6729a3c65d8ba">swapxz </a>(pl)
<a name="l00485"></a>00485             call <a class="code" href="prims_8f90.html#a81acf562c7962cb3c8b6729a3c65d8ba">swapxz </a>(pr)
<a name="l00486"></a>00486             call <a class="code" href="prims_8f90.html#a81acf562c7962cb3c8b6729a3c65d8ba">swapxz </a>(prr)
<a name="l00487"></a>00487             call <a class="code" href="hydro_8f90.html#ad4300db9256018626c24a5498bd8e34c">limiter </a>(pll,pl,pr,prr,limiter_type,neqtot)            
<a name="l00488"></a>00488             call <a class="code" href="hydro_8f90.html#af3975a7bd827e308de535d90f078ac97">primfhll</a>(pl, pr, ff)
<a name="l00489"></a>00489             call <a class="code" href="prims_8f90.html#a81acf562c7962cb3c8b6729a3c65d8ba">swapxz </a>(ff)
<a name="l00490"></a>00490             <a class="code" href="namespaceglobals.html#a3e3e97adbac97c483d8795af6556225e">HC</a>(:,i,j,k) = ff(:)
<a name="l00491"></a>00491          
<a name="l00492"></a>00492           <span class="keyword">end if</span>
<a name="l00493"></a>00493           
<a name="l00494"></a>00494         <span class="keyword">end do</span>
<a name="l00495"></a>00495       <span class="keyword">end do</span>
<a name="l00496"></a>00496     <span class="keyword">end do</span>
<a name="l00497"></a>00497     
<a name="l00498"></a>00498   <span class="keyword">end select</span>
<a name="l00499"></a>00499   
<a name="l00500"></a>00500 <span class="keyword">end subroutine HLLfluxes</span>
<a name="l00501"></a>00501 
<a name="l00502"></a>00502 <span class="comment">!===============================================================================</span>
<a name="l00503"></a>00503 <span class="comment"></span>
<a name="l00504"></a>00504 !&gt; @brief HLL intercell fluxes along X using primitives at lef/right of an interface
<a name="l00505"></a>00505 !&gt; @param pL Vector of primitives at LEFT of interface
<a name="l00506"></a>00506 !&gt; @param pR Vector of primitives at RIGHT of interface
<a name="l00507"></a>00507 !&gt; @param ff Returned vector of HLL intercell fluxes
<a name="l00508"></a><a class="code" href="hydro_8f90.html#af3975a7bd827e308de535d90f078ac97">00508</a> <span class="keyword">subroutine </span><a class="code" href="hydro_8f90.html#af3975a7bd827e308de535d90f078ac97">primfhll</a> (pL, pR, ff)
<a name="l00509"></a>00509 
<a name="l00510"></a>00510   use <span class="keywordflow">parameters</span>
<a name="l00511"></a>00511   <span class="keyword">implicit none</span>
<a name="l00512"></a>00512   
<a name="l00513"></a>00513   <span class="keywordtype">real</span>, <span class="keywordtype">intent(in)</span> :: pL(neqtot)
<a name="l00514"></a>00514   <span class="keywordtype">real</span>, <span class="keywordtype">intent(in)</span> :: pR(neqtot)
<a name="l00515"></a>00515   <span class="keywordtype">real</span>, <span class="keywordtype">intent(out)</span> :: ff(neqtot)
<a name="l00516"></a>00516   
<a name="l00517"></a>00517   <span class="keywordtype">real</span> :: sl, sr
<a name="l00518"></a>00518   <span class="keywordtype">real</span> :: uL(neqtot), uR(neqtot)
<a name="l00519"></a>00519   <span class="keywordtype">real</span> :: fL(neqtot), fR(neqtot)
<a name="l00520"></a>00520 
<a name="l00521"></a>00521   <span class="comment">! Calculate wavespeeds</span>
<a name="l00522"></a>00522   call <a class="code" href="hydro_8f90.html#a6c9265dc8af61a86d448d001207c4f57">wavespeed </a>(pL,pR,sl,sr)
<a name="l00523"></a>00523 
<a name="l00524"></a>00524   <span class="comment">! Obtain intercell fluxes as given by 10.21 of Toro</span>
<a name="l00525"></a>00525   <span class="keyword">if</span> (sl.ge.0) <span class="keyword">then</span>
<a name="l00526"></a>00526     call <a class="code" href="prims_8f90.html#abb5b0c98fe52086f4a769f16ffba7155">prim2fluxes </a>(pL, DIM_X, fL)
<a name="l00527"></a>00527     ff(:) = fL(:)
<a name="l00528"></a>00528     return
<a name="l00529"></a>00529   <span class="keyword">else</span> <span class="keyword">if</span> (sr.le.0) <span class="keyword">then</span>
<a name="l00530"></a>00530     call <a class="code" href="prims_8f90.html#abb5b0c98fe52086f4a769f16ffba7155">prim2fluxes </a>(pR, DIM_X, fR)  
<a name="l00531"></a>00531     ff(:) = fR(:)
<a name="l00532"></a>00532     return
<a name="l00533"></a>00533   <span class="keyword">else</span>
<a name="l00534"></a>00534     call <a class="code" href="prims_8f90.html#abb5b0c98fe52086f4a769f16ffba7155">prim2fluxes </a>(pL, DIM_X, fL)
<a name="l00535"></a>00535     call <a class="code" href="prims_8f90.html#abb5b0c98fe52086f4a769f16ffba7155">prim2fluxes </a>(pR, DIM_X, fR)
<a name="l00536"></a>00536     call <a class="code" href="prims_8f90.html#a8e75a6e601ab9110928efb7e59ab4453">prim2flow </a>(pL, uL)
<a name="l00537"></a>00537     call <a class="code" href="prims_8f90.html#a8e75a6e601ab9110928efb7e59ab4453">prim2flow </a>(pR, uR)
<a name="l00538"></a>00538     ff(:) = (sr*fl(:)-sl*fr(:)+sl*sr*(uR(:)-uL(:)))/(sr-sl)
<a name="l00539"></a>00539     return
<a name="l00540"></a>00540   <span class="keyword">end if</span>
<a name="l00541"></a>00541 
<a name="l00542"></a>00542 <span class="keyword">end subroutine primfhll</span>
<a name="l00543"></a>00543 
<a name="l00544"></a>00544 <span class="comment">!===============================================================================</span>
<a name="l00545"></a>00545 <span class="comment"></span>
<a name="l00546"></a>00546 !&gt; @brief Applies artificial viscosity to a block&#39;s flow variables
<a name="l00547"></a>00547 !&gt; @details Viscosity: up(n)=up(n)+eta*\nabla^2(u(n))
<a name="l00548"></a>00548 !&gt; @param bIndx Block&#39;s local index
<a name="l00549"></a>00549 !&gt; @param U Flow variables at t^n
<a name="l00550"></a>00550 !&gt; @param U Flow variables at t^(n+1)
<a name="l00551"></a><a class="code" href="hydro_8f90.html#a2db2c449b150c852b8075be76c27a90e">00551</a> <span class="keyword">subroutine </span><a class="code" href="hydro_8f90.html#a2db2c449b150c852b8075be76c27a90e">viscosity</a> (bIndx, U, UP)
<a name="l00552"></a>00552 
<a name="l00553"></a>00553   use <span class="keywordflow">parameters</span>
<a name="l00554"></a>00554   <span class="keyword">implicit none</span>
<a name="l00555"></a>00555 
<a name="l00556"></a>00556   <span class="keywordtype">integer</span>, <span class="keywordtype">intent(in)</span> :: bIndx
<a name="l00557"></a>00557   <span class="keywordtype">real</span>, <span class="keywordtype">intent(in)</span> :: U (nbMaxProc, neqtot, nxmin:nxmax, nymin:nymax, nzmin:nzmax)
<a name="l00558"></a>00558   <span class="keywordtype">real</span>, <span class="keywordtype">intent(inout)</span> :: UP (nbMaxProc, neqtot, nxmin:nxmax, nymin:nymax, nzmin:nzmax)
<a name="l00559"></a>00559 
<a name="l00560"></a>00560   <span class="keywordtype">integer</span> :: i, j, k
<a name="l00561"></a>00561 
<a name="l00562"></a>00562   <span class="keyword">do</span> i=1,<a class="code" href="namespaceparameters.html#ad032cf1de9e7d232d045a52ece9eae4b">ncells_x</a>
<a name="l00563"></a>00563     <span class="keyword">do</span> j=1,<a class="code" href="namespaceparameters.html#aa52d0561bd220fc5f155b7d1932d8f1d">ncells_y</a>
<a name="l00564"></a>00564       <span class="keyword">do</span> k=1,<a class="code" href="namespaceparameters.html#a568fe0267a053f4e31fc851dba5a1ede">ncells_z</a>
<a name="l00565"></a>00565         UP(bIndx,:,i,j,k)   &amp;
<a name="l00566"></a>00566           = UP(bIndx,:,i,j,k) + visc_eta*(   &amp;
<a name="l00567"></a>00567           + U(bIndx,:,i+1,j,k) + U(bIndx,:,i-1,j,k)   &amp;
<a name="l00568"></a>00568           + U(bIndx,:,i,j+1,k) + U(bIndx,:,i,j-1,k)   &amp;
<a name="l00569"></a>00569           + U(bIndx,:,i,j,k+1) + U(bIndx,:,i,j,k-1)   &amp;
<a name="l00570"></a>00570           - 6.0*UP(bIndx,:,i,j,k) )
<a name="l00571"></a>00571       <span class="keyword">end do</span>
<a name="l00572"></a>00572     <span class="keyword">end do</span>
<a name="l00573"></a>00573   <span class="keyword">end do</span>
<a name="l00574"></a>00574 
<a name="l00575"></a>00575 <span class="keyword">end subroutine viscosity</span>
<a name="l00576"></a>00576 
<a name="l00577"></a>00577 <span class="comment">!===============================================================================</span>
<a name="l00578"></a>00578 <span class="comment"></span>
<a name="l00579"></a>00579 !&gt; @brief Applies conservative formula to calculate stepped U variables
<a name="l00580"></a>00580 !&gt; @details Assumes the numerical intercell fluxes FC have been calculated for
<a name="l00581"></a>00581 !! this block
<a name="l00582"></a>00582 !&gt; @param locIndx Block&#39;s local index
<a name="l00583"></a>00583 !&gt; @param dtp Timestep to use
<a name="l00584"></a><a class="code" href="hydro_8f90.html#ae9c6c604c05a7aa9efa21850fa20cdf3">00584</a> <span class="keyword">subroutine </span><a class="code" href="hydro_8f90.html#ae9c6c604c05a7aa9efa21850fa20cdf3">HLLstep</a> (locIndx, dtp)
<a name="l00585"></a>00585 
<a name="l00586"></a>00586   use <span class="keywordflow">parameters</span>
<a name="l00587"></a>00587   use <span class="keywordflow">globals</span>
<a name="l00588"></a>00588   <span class="keyword">implicit none</span>
<a name="l00589"></a>00589 
<a name="l00590"></a>00590   <span class="keywordtype">integer</span>, <span class="keywordtype">intent(in)</span> :: locIndx
<a name="l00591"></a>00591   <span class="keywordtype">real</span>, <span class="keywordtype">intent(in)</span> :: dtp
<a name="l00592"></a>00592   
<a name="l00593"></a>00593   <span class="keywordtype">integer</span> :: i, j, k, bID, lev
<a name="l00594"></a>00594   <span class="keywordtype">real</span> :: dtdx, dtdy, dtdz
<a name="l00595"></a>00595   <span class="keywordtype">integer</span> :: a  <span class="comment">! DEBUG</span>
<a name="l00596"></a>00596   <span class="keywordtype">logical</span> :: debug   <span class="comment">! DEBUG</span>
<a name="l00597"></a>00597 
<a name="l00598"></a>00598   bID = <a class="code" href="namespaceglobals.html#adc845521f6ad2502bc19df43607224e0">localBlocks</a>(locIndx)
<a name="l00599"></a>00599   call <a class="code" href="admesh_8f90.html#a971d8fccc948f21cfb43c8b9dd2ade5a">meshlevel </a>(bID, lev)
<a name="l00600"></a>00600 
<a name="l00601"></a>00601   dtdx = dtp/<a class="code" href="namespaceglobals.html#a4b0c55fb2db0260908cd128c2a6f762f">dx</a>(lev)
<a name="l00602"></a>00602   dtdy = dtp/<a class="code" href="namespaceglobals.html#a75a803e9fb814f0f532f09795c31948f">dy</a>(lev)
<a name="l00603"></a>00603   dtdz = dtp/<a class="code" href="namespaceglobals.html#a359c03a4b72ff3ab06d5fe9fbc810f9a">dz</a>(lev)
<a name="l00604"></a>00604 
<a name="l00605"></a>00605   <span class="comment">! Apply conservative formula (10.2 of Toro) to obtain UPs</span>
<a name="l00606"></a>00606   <span class="keyword">do</span> i=1,<a class="code" href="namespaceparameters.html#ad032cf1de9e7d232d045a52ece9eae4b">ncells_x</a>
<a name="l00607"></a>00607     <span class="keyword">do</span> j=1,<a class="code" href="namespaceparameters.html#aa52d0561bd220fc5f155b7d1932d8f1d">ncells_y</a>
<a name="l00608"></a>00608       <span class="keyword">do</span> k=1,<a class="code" href="namespaceparameters.html#a568fe0267a053f4e31fc851dba5a1ede">ncells_z</a>
<a name="l00609"></a>00609         <a class="code" href="namespaceglobals.html#a0650c733701f715a885795fef73e173f">UP</a>(locIndx,:,i,j,k)   &amp;
<a name="l00610"></a>00610           = <a class="code" href="namespaceglobals.html#a582706020cbc63411a5564cc9a01436f">U</a>(locIndx,:,i,j,k)   &amp;
<a name="l00611"></a>00611           + dtdx*(<a class="code" href="namespaceglobals.html#a96cf4e9b9fa4b62fbc27e80e5655daa7">FC</a>(:,i-1,j,k)-<a class="code" href="namespaceglobals.html#a96cf4e9b9fa4b62fbc27e80e5655daa7">FC</a>(:,i,j,k))   &amp;
<a name="l00612"></a>00612           + dtdy*(<a class="code" href="namespaceglobals.html#a9325919e4ee2cb149132c8730d4a7817">GC</a>(:,i,j-1,k)-<a class="code" href="namespaceglobals.html#a9325919e4ee2cb149132c8730d4a7817">GC</a>(:,i,j,k))   &amp;
<a name="l00613"></a>00613           + dtdz*(<a class="code" href="namespaceglobals.html#a3e3e97adbac97c483d8795af6556225e">HC</a>(:,i,j,k-1)-<a class="code" href="namespaceglobals.html#a3e3e97adbac97c483d8795af6556225e">HC</a>(:,i,j,k))
<a name="l00614"></a>00614       <span class="keyword">end do</span>
<a name="l00615"></a>00615     <span class="keyword">end do</span>
<a name="l00616"></a>00616   <span class="keyword">end do</span>
<a name="l00617"></a>00617 
<a name="l00618"></a>00618 <span class="keyword">end subroutine HLLstep</span>
<a name="l00619"></a>00619 
<a name="l00620"></a>00620 <span class="comment">!===============================================================================</span>
<a name="l00621"></a>00621 <span class="comment"></span>
<a name="l00622"></a>00622 !&gt; @brief Obtains wavespeed estimates given primitives at an interface
<a name="l00623"></a>00623 !&gt; @details This routine uses the X-component of speed.
<a name="l00624"></a>00624 !&gt; @param dl Density at &quot;left&quot; of interface
<a name="l00625"></a>00625 !&gt; @param dr Density at &quot;right&quot; of interface
<a name="l00626"></a>00626 !&gt; @param ul Velocity at &quot;left&quot; of interface
<a name="l00627"></a>00627 !&gt; @param ur Velocity at &quot;right&quot; of interface
<a name="l00628"></a>00628 !&gt; @param pl Pressure at &quot;left&quot; of interface
<a name="l00629"></a>00629 !&gt; @param pr Pressure at &quot;right&quot; of interface
<a name="l00630"></a>00630 !&gt; @param sl Wavespeed at &quot;left&quot; of interface
<a name="l00631"></a>00631 !&gt; @param sr Wavespeed at &quot;right&quot; of interface
<a name="l00632"></a><a class="code" href="hydro_8f90.html#a6c9265dc8af61a86d448d001207c4f57">00632</a> <span class="keyword">subroutine </span><a class="code" href="hydro_8f90.html#a6c9265dc8af61a86d448d001207c4f57">wavespeed</a> (primL, primR, sl, sr)
<a name="l00633"></a>00633 
<a name="l00634"></a>00634   use <span class="keywordflow">parameters</span>
<a name="l00635"></a>00635   <span class="keyword">implicit none</span>
<a name="l00636"></a>00636 
<a name="l00637"></a>00637   <span class="keywordtype">real</span>, <span class="keywordtype">intent(in)</span> :: primL(neqtot)
<a name="l00638"></a>00638   <span class="keywordtype">real</span>, <span class="keywordtype">intent(in)</span> :: primR(neqtot)
<a name="l00639"></a>00639   <span class="keywordtype">real</span>, <span class="keywordtype">intent(out)</span> :: sl
<a name="l00640"></a>00640   <span class="keywordtype">real</span>, <span class="keywordtype">intent(out)</span> :: sr
<a name="l00641"></a>00641 
<a name="l00642"></a>00642   <span class="keywordtype">real</span> :: dl1, ul1, pl1, cl
<a name="l00643"></a>00643   <span class="keywordtype">real</span> :: dr1, ur1, pr1, cr
<a name="l00644"></a>00644 
<a name="l00645"></a>00645   <span class="comment">! Unpack primitives</span>
<a name="l00646"></a>00646   dl1 = primL(1)
<a name="l00647"></a>00647   dr1 = primR(1)
<a name="l00648"></a>00648   ul1 = primL(2)
<a name="l00649"></a>00649   ur1 = primR(2)
<a name="l00650"></a>00650   pl1 = primL(5)
<a name="l00651"></a>00651   pr1 = primR(5)
<a name="l00652"></a>00652   
<a name="l00653"></a>00653   <span class="comment">! Sound speeds</span>
<a name="l00654"></a>00654   call <a class="code" href="hydro_8f90.html#ab728e619fabaa5339726a7506022fd49">sound </a>(primL,cl)
<a name="l00655"></a>00655   call <a class="code" href="hydro_8f90.html#ab728e619fabaa5339726a7506022fd49">sound </a>(primR,cr)
<a name="l00656"></a>00656 
<a name="l00657"></a>00657   <span class="comment">! Davis direct bounded, 10.38 of Toro</span>
<a name="l00658"></a>00658   sl = min( ul1-cl, ur1-cr )
<a name="l00659"></a>00659   sr = max( ul1+cl, ur1+cr )
<a name="l00660"></a>00660 
<a name="l00661"></a>00661   return
<a name="l00662"></a>00662 
<a name="l00663"></a>00663 <span class="keyword">end subroutine wavespeed</span>
<a name="l00664"></a>00664 
<a name="l00665"></a>00665 <span class="comment">!===============================================================================</span>
<a name="l00666"></a>00666 
<a name="l00667"></a>00667 <span class="comment">! *** OBSOLETE ***</span><span class="comment"></span>
<a name="l00668"></a>00668 !&gt; @brief Obtains wavespeed estimates given primitives at an interface
<a name="l00669"></a>00669 !&gt; @details This routine uses the X-component of speed.
<a name="l00670"></a>00670 !&gt; @param dl Density at &quot;left&quot; of interface
<a name="l00671"></a>00671 !&gt; @param dr Density at &quot;right&quot; of interface
<a name="l00672"></a>00672 !&gt; @param ul Velocity at &quot;left&quot; of interface
<a name="l00673"></a>00673 !&gt; @param ur Velocity at &quot;right&quot; of interface
<a name="l00674"></a>00674 !&gt; @param pl Pressure at &quot;left&quot; of interface
<a name="l00675"></a>00675 !&gt; @param pr Pressure at &quot;right&quot; of interface
<a name="l00676"></a>00676 !&gt; @param sl Wavespeed at &quot;left&quot; of interface
<a name="l00677"></a>00677 !&gt; @param sr Wavespeed at &quot;right&quot; of interface
<a name="l00678"></a>00678 !subroutine wavespeed2 (primL, primR, dimens, sl, sr)
<a name="l00679"></a>00679 
<a name="l00680"></a>00680 <span class="comment">!  use parameters</span>
<a name="l00681"></a>00681 <span class="comment">!  implicit none</span>
<a name="l00682"></a>00682 
<a name="l00683"></a>00683 <span class="comment">!  real, intent(in) :: primL(neqtot)</span>
<a name="l00684"></a>00684 <span class="comment">!  real, intent(in) :: primR(neqtot)</span>
<a name="l00685"></a>00685 <span class="comment">!  integer, intent(in) :: dimens</span>
<a name="l00686"></a>00686 <span class="comment">!  real, intent(out) :: sl</span>
<a name="l00687"></a>00687 <span class="comment">!  real, intent(out) :: sr</span>
<a name="l00688"></a>00688 
<a name="l00689"></a>00689 <span class="comment">!  real :: dl1, ul1, pl1, cl</span>
<a name="l00690"></a>00690 <span class="comment">!  real :: dr1, ur1, pr1, cr</span>
<a name="l00691"></a>00691 
<a name="l00692"></a>00692 <span class="comment">!  ! Unpack primitives</span>
<a name="l00693"></a>00693 <span class="comment">!  dl1 = primL(1)</span>
<a name="l00694"></a>00694 <span class="comment">!  dr1 = primR(1)</span>
<a name="l00695"></a>00695 <span class="comment">!  select case (dimens)</span>
<a name="l00696"></a>00696 <span class="comment">!  case (DIM_X)</span>
<a name="l00697"></a>00697 <span class="comment">!    ul1 = primL(2)</span>
<a name="l00698"></a>00698 <span class="comment">!    ur1 = primR(2)</span>
<a name="l00699"></a>00699 <span class="comment">!  case (DIM_Y)</span>
<a name="l00700"></a>00700 <span class="comment">!    ul1 = primL(3)</span>
<a name="l00701"></a>00701 <span class="comment">!    ur1 = primR(3)</span>
<a name="l00702"></a>00702 <span class="comment">!  case (DIM_Z)</span>
<a name="l00703"></a>00703 <span class="comment">!    ul1 = primL(4)</span>
<a name="l00704"></a>00704 <span class="comment">!    ur1 = primR(4)</span>
<a name="l00705"></a>00705 <span class="comment">!  case default</span>
<a name="l00706"></a>00706 <span class="comment">!    ul1 = 0.0</span>
<a name="l00707"></a>00707 <span class="comment">!    ur1 = 0.0</span>
<a name="l00708"></a>00708 <span class="comment">!  end select</span>
<a name="l00709"></a>00709 <span class="comment">!  pl1 = primL(5)</span>
<a name="l00710"></a>00710 <span class="comment">!  pr1 = primR(5)</span>
<a name="l00711"></a>00711   
<a name="l00712"></a>00712 <span class="comment">!  ! Sound speeds</span>
<a name="l00713"></a>00713 <span class="comment">!  call sound (primL,cl)</span>
<a name="l00714"></a>00714 <span class="comment">!  call sound (primR,cr)</span>
<a name="l00715"></a>00715 
<a name="l00716"></a>00716 <span class="comment">!  ! Davis direct bounded, 10.38 of Toro</span>
<a name="l00717"></a>00717 <span class="comment">!  sl = min( ul1-cl, ur1-cr )</span>
<a name="l00718"></a>00718 <span class="comment">!  sr = max( ul1+cl, ur1+cr )</span>
<a name="l00719"></a>00719 
<a name="l00720"></a>00720 <span class="comment">!  return</span>
<a name="l00721"></a>00721 
<a name="l00722"></a>00722 <span class="comment">!end subroutine wavespeed2</span>
<a name="l00723"></a>00723 
<a name="l00724"></a>00724 <span class="comment">!===============================================================================</span>
<a name="l00725"></a>00725 <span class="comment"></span>
<a name="l00726"></a>00726 !&gt; @brief Obtains wavespeed estimates given primitives at an interface
<a name="l00727"></a>00727 !&gt; @details This routine uses the X-component of speed.
<a name="l00728"></a>00728 !&gt; @param pll Pressure at &quot;left&quot; of interface
<a name="l00729"></a>00729 !&gt; @param pl Pressure at &quot;left&quot; of interface
<a name="l00730"></a>00730 !&gt; @param pr Pressure at &quot;right&quot; of interface
<a name="l00731"></a>00731 !&gt; @param prr Wavespeed at &quot;left&quot; of interface
<a name="l00732"></a>00732 !&gt; @param lim Limiter to use. See parameters.f90 for supported options.
<a name="l00733"></a>00733 !&gt; @param neqtot Number of equations
<a name="l00734"></a><a class="code" href="hydro_8f90.html#ad4300db9256018626c24a5498bd8e34c">00734</a> <span class="keyword">subroutine </span><a class="code" href="hydro_8f90.html#ad4300db9256018626c24a5498bd8e34c">limiter</a> (pll,pl,pr,prr,lim,neqs)
<a name="l00735"></a>00735 
<a name="l00736"></a>00736   <span class="keyword">implicit none</span>
<a name="l00737"></a>00737 
<a name="l00738"></a>00738   <span class="keywordtype">integer</span>, <span class="keywordtype">intent(in)</span> :: neqs
<a name="l00739"></a>00739   <span class="keywordtype">integer</span>, <span class="keywordtype">intent(in)</span> :: lim
<a name="l00740"></a>00740   <span class="keywordtype">real</span>, <span class="keywordtype">intent(in)</span> :: pll(neqs)
<a name="l00741"></a>00741   <span class="keywordtype">real</span>, <span class="keywordtype">intent(in)</span> :: prr(neqs)
<a name="l00742"></a>00742   <span class="keywordtype">real</span>, <span class="keywordtype">intent(inout)</span> :: pl(neqs)
<a name="l00743"></a>00743   <span class="keywordtype">real</span>, <span class="keywordtype">intent(inout)</span> :: pr(neqs)
<a name="l00744"></a>00744 
<a name="l00745"></a>00745 
<a name="l00746"></a>00746   <span class="keywordtype">real</span> :: dl, dm, dr, al, ar
<a name="l00747"></a>00747   <span class="keywordtype">integer</span> :: ieq
<a name="l00748"></a>00748 
<a name="l00749"></a>00749   <span class="keyword">do</span> ieq=1,neqs
<a name="l00750"></a>00750     dl = pl(ieq) - pll(ieq)
<a name="l00751"></a>00751     dm = pr(ieq) - pl(ieq)
<a name="l00752"></a>00752     dr = prr(ieq) - pr(ieq)
<a name="l00753"></a>00753     al = average(dl, dm, lim)
<a name="l00754"></a>00754     ar = average(dm, dr, lim)
<a name="l00755"></a>00755     pl(ieq) = pl(ieq) + 0.5*al
<a name="l00756"></a>00756     pr(ieq) = pr(ieq) - 0.5*ar
<a name="l00757"></a>00757   <span class="keyword">end do</span>
<a name="l00758"></a>00758 
<a name="l00759"></a>00759 <span class="keyword">contains</span>
<a name="l00760"></a>00760 
<a name="l00761"></a>00761   <span class="keyword">real </span><span class="keyword">function </span>average (a,b,opt)
<a name="l00762"></a>00762 
<a name="l00763"></a>00763     use <span class="keywordflow">constants</span>
<a name="l00764"></a>00764     <span class="keyword">implicit none</span>
<a name="l00765"></a>00765     
<a name="l00766"></a>00766     <span class="keywordtype">real</span>, <span class="keywordtype">intent(in)</span> :: a, b
<a name="l00767"></a>00767     <span class="keywordtype">integer</span>, <span class="keywordtype">intent(in)</span> :: opt
<a name="l00768"></a>00768 
<a name="l00769"></a>00769     <span class="keywordtype">real</span> :: s, c, d
<a name="l00770"></a>00770 
<a name="l00771"></a>00771     <span class="keyword">select</span> <span class="keyword">case</span> (opt)
<a name="l00772"></a>00772     
<a name="l00773"></a>00773     <span class="keyword">case</span> (<a class="code" href="namespaceconstants.html#af3a5285b7e64c005a64256e858f390c0">LIMITER_NONE</a>)
<a name="l00774"></a>00774       average = 0.5*(a+b)
<a name="l00775"></a>00775 
<a name="l00776"></a>00776     <span class="keyword">case</span> (<a class="code" href="namespaceconstants.html#aab2c88c895c58ebf353bfd0d60a28825">LIMITER_MINMOD</a>)
<a name="l00777"></a>00777       s = sign(1.0,a)
<a name="l00778"></a>00778       average = s*max(0.0, min(abs(a), s*b))
<a name="l00779"></a>00779 
<a name="l00780"></a>00780     <span class="keyword">case</span> (<a class="code" href="namespaceconstants.html#aa51986b77dff152c7f26e3850f14f7c0">LIMITER_ALBADA</a>)
<a name="l00781"></a>00781       average = a*b*(a+b)/(a**2+b**2)
<a name="l00782"></a>00782 
<a name="l00783"></a>00783     <span class="keyword">case</span> (<a class="code" href="namespaceconstants.html#a36997ebe8320792df915a9a59f684ae7">LIMITER_UMIST</a>)
<a name="l00784"></a>00784       s = sign(1.0,a)
<a name="l00785"></a>00785       c = 0.25*a + 0.75*b
<a name="l00786"></a>00786       d = 0.75*a + 0.25*b
<a name="l00787"></a>00787       average = min(2.0*abs(a), 2.0*s*b, s*c, s*d)
<a name="l00788"></a>00788       average = s*max(0.0, average)
<a name="l00789"></a>00789 
<a name="l00790"></a>00790     <span class="keyword">case</span> (<a class="code" href="namespaceconstants.html#a481b8ac54ac11871fb005216ecb9168a">LIMITER_WOODWARD</a>)
<a name="l00791"></a>00791       s = sign(1.0,a)
<a name="l00792"></a>00792       c = 0.5*(a+b)
<a name="l00793"></a>00793       average = min(2.0*abs(a), 2*s*b, s*c)
<a name="l00794"></a>00794       average = s*max(0.0, average)
<a name="l00795"></a>00795 
<a name="l00796"></a>00796     <span class="keyword">case</span> (<a class="code" href="namespaceconstants.html#a70b7ccbc0e9e34a00c99a6aa15742f33">LIMITER_SUPERBEE</a>)
<a name="l00797"></a>00797       s = sign(1.0,b)
<a name="l00798"></a>00798       c = min(2.0*abs(b), s*a)
<a name="l00799"></a>00799       d = min(abs(b),2.0*s*a)
<a name="l00800"></a>00800       average = s*max(0.0,c,d)
<a name="l00801"></a>00801 
<a name="l00802"></a>00802     <span class="keyword">case</span> default
<a name="l00803"></a>00803       average = 0.0
<a name="l00804"></a>00804 
<a name="l00805"></a>00805     <span class="keyword">end select</span>
<a name="l00806"></a>00806 
<a name="l00807"></a>00807 <span class="keyword">  end function average</span>
<a name="l00808"></a>00808 
<a name="l00809"></a>00809 <span class="keyword">end subroutine limiter</span>
<a name="l00810"></a>00810 
<a name="l00811"></a>00811 <span class="comment">!===============================================================================</span>
<a name="l00812"></a>00812 <span class="comment"></span>
<a name="l00813"></a>00813 !&gt; @brief Calculates the soundspeed given a vector of primitives
<a name="l00814"></a>00814 !&gt; @param pvars Vector of primitive variables
<a name="l00815"></a>00815 !&gt; @param csound The hydrodynamical speed of sound
<a name="l00816"></a><a class="code" href="hydro_8f90.html#ab728e619fabaa5339726a7506022fd49">00816</a> <span class="keyword">subroutine </span><a class="code" href="hydro_8f90.html#ab728e619fabaa5339726a7506022fd49">sound</a> (pvars, csound)
<a name="l00817"></a>00817 
<a name="l00818"></a>00818   use <span class="keywordflow">parameters</span>
<a name="l00819"></a>00819   <span class="keyword">implicit none</span>
<a name="l00820"></a>00820 
<a name="l00821"></a>00821   <span class="keywordtype">real</span>, <span class="keywordtype">intent(in)</span> :: pvars(neqtot)
<a name="l00822"></a>00822   <span class="keywordtype">real</span>, <span class="keywordtype">intent(out)</span> :: csound
<a name="l00823"></a>00823 
<a name="l00824"></a>00824   csound = sqrt(<a class="code" href="namespaceparameters.html#ac02bd2a850bcfa6a99ba2652681c2f2b">gamma</a>*pvars(5)/pvars(1))
<a name="l00825"></a>00825 
<a name="l00826"></a>00826   return
<a name="l00827"></a>00827 
<a name="l00828"></a>00828 <span class="keyword">end subroutine sound</span>
</pre></div></div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Variables</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address style="text-align: right;"><small>Generated on Thu Jun 7 13:53:13 2012 for Walicxe3D by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.3 </small></address>
</body>
</html>
